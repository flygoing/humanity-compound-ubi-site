{
  "contractName": "CompoundPool",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compoundToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "depositToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_comptroller",
          "type": "address"
        },
        {
          "name": "_compoundToken",
          "type": "address"
        },
        {
          "name": "_depositToken",
          "type": "address"
        },
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newBeneficiary",
          "type": "address"
        }
      ],
      "name": "updateBeneficiary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawInterest",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "donate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "excessDepositTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newBeneficiary\",\"type\":\"address\"}],\"name\":\"updateBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"excessDepositTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInterest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compoundToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_comptroller\",\"type\":\"address\"},{\"name\":\"_compoundToken\",\"type\":\"address\"},{\"name\":\"_depositToken\",\"type\":\"address\"},{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Nate Welch <github.com/flyging>\",\"details\":\"A bank that will pool compound tokens and allows the beneficiary to withdraw\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"constructor\":{\"params\":{\"_beneficiary\":\"the address that can withdraw excess deposit tokens (interest/donations)\",\"_compoundToken\":\"the Compound Token contract (e.g. cDAI)\",\"_comptroller\":\"the Compound Comptroller contract used to enter the compoundToken's market\",\"_depositToken\":\"the Deposit Token contract (e.g. DAI)\",\"_name\":\"name of the pool share token\",\"_symbol\":\"symbol of the pool share token\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"details\":\"Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\",\"params\":{\"_amount\":\"The amount of deposit tokens to deposit\"}},\"donate(uint256)\":{\"details\":\"Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\",\"params\":{\"_amount\":\"The amount of deposit tokens to donate\"}},\"excessDepositTokens()\":{\"details\":\"Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBeneficiary(address)\":{\"details\":\"This function will fail if called by a non-owner address\",\"params\":{\"_newBeneficiary\":\"The address that will become the new beneficiary\"}},\"withdraw(uint256)\":{\"details\":\"This will fail if msg.sender doesn't have at least _amount pool share tokens\",\"params\":{\"_amount\":\"The amount of deposit tokens to withdraw\"}},\"withdrawInterest(address,uint256)\":{\"details\":\"This function will fail if called by a non-beneficiary or if _amount is higher than the excess deposit tokens\",\"params\":{\"_amount\":\"The amount of deposit tokens to send to the `_to` address\",\"_to\":\"The address that the deposit tokens will be sent to\"}}},\"title\":\"CompoundPool\"},\"userdoc\":{\"methods\":{\"constructor\":\"Constructor\",\"deposit(uint256)\":{\"notice\":\"Called by someone wishing to deposit to the bank. This amount, plus previous user's balance, will always be withdrawable\"},\"donate(uint256)\":{\"notice\":\"Called by someone wishing to donate to the bank. This amount will *not* be added to users balance, and will be usable by the beneficiary.\"},\"excessDepositTokens()\":{\"notice\":\"Returns the amount of deposit tokens that are usable by the beneficiary. Basically, interestEarned+donations\"},\"updateBeneficiary(address)\":{\"notice\":\"Called by the `owner` to set a new beneficiary\"},\"withdraw(uint256)\":{\"notice\":\"Called by someone wishing to withdraw from the bank\"},\"withdrawInterest(address,uint256)\":{\"notice\":\"The beneficiary calls this function to withdraw excess deposit tokens\"}},\"notice\":\"Based on Zefram Lou's implementation https://github.com/ZeframLou/pooled-cdai\"}},\"settings\":{\"compilationTarget\":{\"compound-pooling/contracts/CompoundPool.sol\":\"CompoundPool\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"compound-pooling/contracts/CompoundPool.sol\":{\"keccak256\":\"0x5f97e61ae3110dab6e490cb9c0c386f426a90860c9961847a0874f7bf9ed0e7e\",\"urls\":[\"bzzr://15f1e57974dac412c4e6eb0654e03df6fb21a65497893750b6c4b769d989275e\"]},\"compound-pooling/contracts/interface/ICompoundERC20.sol\":{\"keccak256\":\"0xc2972b36f7daec027a17d13596301ac77055a47b8d0659b158dbd16f2be87c5a\",\"urls\":[\"bzzr://61cac658cff4c40537ed0c79943920071cb9bd69a8a84f195eb730597370d8a1\"]},\"compound-pooling/contracts/interface/IComptroller.sol\":{\"keccak256\":\"0xb508330a829c507ea899453aefb5eb1490098f408a232e2d44796eff0afa0f91\",\"urls\":[\"bzzr://be16c3f3e2f56e03ef2a2ac32e2dd82a7154614775d09089e5914f68bf3fcb28\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzzr://07fb42206812a17c1f71e548cfa5cec6f9aa1ae0ca5df870718ca4aa9759d1a5\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzzr://f280f38d5ab6e1b89fd898ccd3901054a56572c141d91d30302e2db1db4cc6ff\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002aa138038062002aa18339810180604052620000379190810190620005f9565b85856012826003908051906020019062000053929190620003d5565b50815162000069906004906020850190620003d5565b506005805460ff191660ff9290921691909117610100600160a81b03191661010033810291909117918290556040516001600160a01b0391909204169250600091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600680546001600160a01b038086166001600160a01b0319928316179092556007805485841690831617905560098054928416929091169190911790556200012060016200027a602090811b901c565b60408051600180825281830190925260609160208083019080388339505060065482519293506001600160a01b0316918391506000906200015d57fe5b6001600160a01b0392831660209182029290920101526040517fc299823800000000000000000000000000000000000000000000000000000000815260609187169063c299823890620001b59085906004016200080f565b600060405180830381600087803b158015620001d057600080fd5b505af1158015620001e5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200020f919081019062000598565b9050806000815181106200021f57fe5b60200260200101516000146200026c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002639062000822565b60405180910390fd5b505050505050505062000914565b6007546006546040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815283926001600160a01b039081169263dd62ed3e92620002cc9230921690600401620007d1565b60206040518083038186803b158015620002e557600080fd5b505afa158015620002fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620003209190810190620006bc565b1015620003d2576007546006546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263095ea7b3926200037a9291169060001990600401620007f0565b602060405180830381600087803b1580156200039557600080fd5b505af1158015620003aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620003d09190810190620005d8565b505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041857805160ff191683800117855562000448565b8280016001018555821562000448579182015b82811115620004485782518255916020019190600101906200042b565b50620004569291506200045a565b5090565b6200047791905b8082111562000456576000815560010162000461565b90565b6000620004888251620008bd565b9392505050565b600082601f830112620004a157600080fd5b8151620004b8620004b28262000861565b6200083a565b91508181835260208401935060208101905083856020840282011115620004de57600080fd5b60005b838110156200050e5781620004f788826200058a565b8452506020928301929190910190600101620004e1565b5050505092915050565b6000620004888251620008cf565b6000620004888251620008d4565b600082601f8301126200054657600080fd5b815162000557620004b28262000882565b915080825260208301602083018583830111156200057457600080fd5b62000581838284620008e1565b50505092915050565b600062000488825162000477565b600060208284031215620005ab57600080fd5b81516001600160401b03811115620005c257600080fd5b620005d0848285016200048f565b949350505050565b600060208284031215620005eb57600080fd5b6000620005d0848462000518565b60008060008060008060c087890312156200061357600080fd5b86516001600160401b038111156200062a57600080fd5b6200063889828a0162000534565b96505060208701516001600160401b038111156200065557600080fd5b6200066389828a0162000534565b95505060406200067689828a0162000526565b94505060606200068989828a0162000526565b93505060806200069c89828a0162000526565b92505060a0620006af89828a016200047a565b9150509295509295509295565b600060208284031215620006cf57600080fd5b6000620005d084846200058a565b6000620006eb8383620006f3565b505060200190565b620006fe81620008bd565b82525050565b60006200071182620008b0565b6200071d8185620008b4565b93506200072a83620008aa565b60005b828110156200075b5762000743868351620006dd565b95506200075082620008aa565b91506001016200072d565b5093949350505050565b600062000774602583620008b4565b7f4661696c656420746f20656e74657220636f6d706f756e6420746f6b656e206d81527f61726b6574000000000000000000000000000000000000000000000000000000602082015260400192915050565b620006fe8162000477565b60408101620007e18285620006f3565b620004886020830184620006f3565b60408101620008008285620006f3565b620004886020830184620007c6565b6020808252810162000488818462000704565b60208082528101620008348162000765565b92915050565b6040518181016001600160401b03811182821017156200085957600080fd5b604052919050565b60006001600160401b038211156200087857600080fd5b5060209081020190565b60006001600160401b038211156200089957600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006001600160a01b03821662000834565b151590565b60006200083482620008bd565b60005b83811015620008fe578181015183820152602001620008e4565b838111156200090e576000848401525b50505050565b61217d80620009246000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c806370a08231116100ee578063a457c2d711610097578063c89039c511610071578063c89039c514610317578063dd62ed3e1461031f578063f14faf6f14610332578063f2fde38b14610345576101a3565b8063a457c2d7146102de578063a9059cbb146102f1578063b6b55f2514610304576101a3565b80638f32d59b116100c85780638f32d59b146102b957806395d89b41146102c1578063a0e976b6146102c9576101a3565b806370a0823114610296578063715018a6146102a95780638da5cb5b146102b1576101a3565b8063313ce5671161015057806339f9446e1161012a57806339f9446e146102735780635aa6e6751461027b5780635b730e6914610283576101a3565b8063313ce5671461023657806338af3eed1461024b5780633950935114610260576101a3565b806318160ddd1161018157806318160ddd146101fb57806323b872dd146102105780632e1a7d4d14610223576101a3565b806306fdde03146101a8578063095ea7b3146101c65780630aaffd2a146101e6575b600080fd5b6101b0610358565b6040516101bd9190611f48565b60405180910390f35b6101d96101d43660046116a7565b6103ee565b6040516101bd9190611f2c565b6101f96101f43660046115fa565b610405565b005b61020361046f565b6040516101bd91906120a9565b6101d961021e36600461165a565b610475565b6101f96102313660046116f5565b6104cd565b61023e610651565b6040516101bd91906120b7565b61025361065a565b6040516101bd9190611eb2565b6101d961026e3660046116a7565b610669565b6102036106a5565b61025361080c565b6102036102913660046116a7565b61081b565b6102036102a43660046115fa565b6109db565b6101f96109f6565b610253610a7a565b6101d9610a8e565b6101b0610aa4565b6102d1610b05565b6040516101bd9190611f3a565b6101d96102ec3660046116a7565b610b14565b6101d96102ff3660046116a7565b610b50565b6101f96103123660046116f5565b610b5d565b6102d1610ce9565b61020361032d366004611620565b610cf8565b6101f96103403660046116f5565b610d23565b6101f96103533660046115fa565b610ea5565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050905090565b60006103fb338484610ed5565b5060015b92915050565b61040d610a8e565b61043557604051600160e51b62461bcd02815260040161042c90612029565b60405180910390fd5b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60025490565b6000610482848484610f8f565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546104c29186916104bd908663ffffffff61109116565b610ed5565b5060015b9392505050565b6104d733826110bc565b6006546040517f852a12e30000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063852a12e3906105209084906004016120a9565b602060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105729190810190611713565b1561059257604051600160e51b62461bcd02815260040161042c90611f69565b6007546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a9059cbb906105dd9033908590600401611ee8565b602060405180830381600087803b1580156105f757600080fd5b505af115801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061062f91908101906116d7565b61064e57604051600160e51b62461bcd02815260040161042c90611fe9565b50565b60055460ff1690565b6009546001600160a01b031681565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103fb9185906104bd908663ffffffff61117c16565b60006108076106b261046f565b6006546040517f70a082310000000000000000000000000000000000000000000000000000000081526107fb91670de0b6b3a7640000916107ef916001600160a01b0316906370a082319061070b903090600401611eb2565b60206040518083038186803b15801561072357600080fd5b505afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061075b9190810190611713565b600660009054906101000a90046001600160a01b03166001600160a01b031663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107ab57600080fd5b505af11580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107e39190810190611713565b9063ffffffff6111a416565b9063ffffffff6111e116565b9063ffffffff61109116565b905090565b6008546001600160a01b031681565b6009546000906001600160a01b0316331461084b57604051600160e51b62461bcd02815260040161042c90611f99565b6006546040517f852a12e30000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063852a12e3906108949085906004016120a9565b602060405180830381600087803b1580156108ae57600080fd5b505af11580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108e69190810190611713565b1561090657604051600160e51b62461bcd02815260040161042c90611fb9565b61090e61046f565b610916611219565b101561093757604051600160e51b62461bcd02815260040161042c90612079565b6007546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a9059cbb906109829086908690600401611f1e565b602060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109d491908101906116d7565b5092915050565b6001600160a01b031660009081526020819052604090205490565b6109fe610a8e565b610a1d57604051600160e51b62461bcd02815260040161042c90612029565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805474ffffffffffffffffffffffffffffffffffffffff0019169055565b60055461010090046001600160a01b031690565b60055461010090046001600160a01b0316331490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e45780601f106103b9576101008083540402835291602001916103e4565b6006546001600160a01b031681565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103fb9185906104bd908663ffffffff61109116565b60006103fb338484610f8f565b6007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd90610baa90339030908690600401611ec0565b602060405180830381600087803b158015610bc457600080fd5b505af1158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bfc91908101906116d7565b610c1b57604051600160e51b62461bcd02815260040161042c90612089565b610c2481611329565b6006546040517fa0712d680000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a0712d6890610c6d9084906004016120a9565b602060405180830381600087803b158015610c8757600080fd5b505af1158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cbf9190810190611713565b15610cdf57604051600160e51b62461bcd02815260040161042c90612059565b61064e3382611476565b6007546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd90610d7090339030908690600401611ec0565b602060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dc291908101906116d7565b610de157604051600160e51b62461bcd02815260040161042c90612009565b610dea81611329565b6006546040517fa0712d680000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a0712d6890610e339084906004016120a9565b602060405180830381600087803b158015610e4d57600080fd5b505af1158015610e61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e859190810190611713565b1561064e57604051600160e51b62461bcd02815260040161042c90611ff9565b610ead610a8e565b610ecc57604051600160e51b62461bcd02815260040161042c90612029565b61064e8161152d565b6001600160a01b038316610efe57604051600160e51b62461bcd02815260040161042c90612069565b6001600160a01b038216610f2757604051600160e51b62461bcd02815260040161042c90611f89565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f829085906120a9565b60405180910390a3505050565b6001600160a01b038316610fb857604051600160e51b62461bcd02815260040161042c90612049565b6001600160a01b038216610fe157604051600160e51b62461bcd02815260040161042c90611f59565b6001600160a01b03831660009081526020819052604090205461100a908263ffffffff61109116565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461103f908263ffffffff61117c16565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f829085906120a9565b6000828211156110b657604051600160e51b62461bcd02815260040161042c90611fc9565b50900390565b6001600160a01b0382166110e557604051600160e51b62461bcd02815260040161042c90612039565b6002546110f8908263ffffffff61109116565b6002556001600160a01b038216600090815260208190526040902054611124908263ffffffff61109116565b6001600160a01b0383166000818152602081905260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111709085906120a9565b60405180910390a35050565b6000828201838110156104c657604051600160e51b62461bcd02815260040161042c90611fa9565b6000826111b3575060006103ff565b828202828482816111c057fe5b04146104c657604051600160e51b62461bcd02815260040161042c90612019565b600080821161120557604051600160e51b62461bcd02815260040161042c90611fd9565b600082848161121057fe5b04949350505050565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815260009161080791670de0b6b3a7640000916107ef916001600160a01b03909116906370a0823190611277903090600401611eb2565b60206040518083038186803b15801561128f57600080fd5b505afa1580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112c79190810190611713565b600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561131557600080fd5b505afa1580156107bf573d6000803e3d6000fd5b6007546006546040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815283926001600160a01b039081169263dd62ed3e926113799230921690600401611f03565b60206040518083038186803b15801561139157600080fd5b505afa1580156113a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113c99190810190611713565b101561064e576007546006546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263095ea7b3926114209291169060001990600401611f1e565b602060405180830381600087803b15801561143a57600080fd5b505af115801561144e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061147291908101906116d7565b5050565b6001600160a01b03821661149f57604051600160e51b62461bcd02815260040161042c90612099565b6002546114b2908263ffffffff61117c16565b6002556001600160a01b0382166000908152602081905260409020546114de908263ffffffff61117c16565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111709085906120a9565b6001600160a01b03811661155657604051600160e51b62461bcd02815260040161042c90611f79565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60006104c682356120d2565b60006104c682516120dd565b60006104c682356120ee565b60006104c682516120ee565b60006020828403121561160c57600080fd5b600061161884846115ca565b949350505050565b6000806040838503121561163357600080fd5b600061163f85856115ca565b9250506020611650858286016115ca565b9150509250929050565b60008060006060848603121561166f57600080fd5b600061167b86866115ca565b935050602061168c868287016115ca565b925050604061169d868287016115e2565b9150509250925092565b600080604083850312156116ba57600080fd5b60006116c685856115ca565b9250506020611650858286016115e2565b6000602082840312156116e957600080fd5b600061161884846115d6565b60006020828403121561170757600080fd5b600061161884846115e2565b60006020828403121561172557600080fd5b600061161884846115ee565b61173a816120f7565b82525050565b61173a816120d2565b61173a816120dd565b61173a816120fe565b6000611766826120c5565b61177081856120c9565b9350611780818560208601612109565b61178981612139565b9093019392505050565b60006117a06023836120c9565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006117ff602e836120c9565b7f436f6d706f756e64506f6f6c3a3a77697468647261773a20436f6d706f756e6481527f2072656465656d206661696c6564000000000000000000000000000000000000602082015260400192915050565b600061185e6026836120c9565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015260400192915050565b60006118bd6022836120c9565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f7373000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b600061191c603b836120c9565b7f436f6d706f756e64506f6f6c3a3a6f6e6c7942656e65666963696172793a204f81527f6e6c792063616c6c61626c652062792062656e65666963696172790000000000602082015260400192915050565b600061197b601b836120c9565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006119b46036836120c9565b7f436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a2081527f436f6d706f756e642072656465656d206661696c656400000000000000000000602082015260400192915050565b6000611a13601e836120c9565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000611a4c601a836120c9565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000815260200192915050565b6000611a856027836120c9565b7f436f6d706f756e64506f6f6c3a3a77697468647261773a205472616e7366657281527f206661696c656400000000000000000000000000000000000000000000000000602082015260400192915050565b6000611ae4602a836120c9565b7f436f6d706f756e64506f6f6c3a3a646f6e6174653a20436f6d706f756e64206d81527f696e74206661696c656400000000000000000000000000000000000000000000602082015260400192915050565b6000611b436025836120c9565b7f436f6d706f756e64506f6f6c3a3a646f6e6174653a205472616e73666572206681527f61696c6564000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611ba26021836120c9565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81527f7700000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611c016020836120c9565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000611c3a6021836120c9565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381527f7300000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611c996025836120c9565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611cf8602b836120c9565b7f436f6d706f756e64506f6f6c3a3a6465706f7369743a20436f6d706f756e642081527f6d696e74206661696c6564000000000000000000000000000000000000000000602082015260400192915050565b6000611d576024836120c9565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f7265737300000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611db6603f836120c9565b7f436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a2081527f4e6f7420656e6f75676820657863657373206465706f73697420746f6b656e00602082015260400192915050565b6000611e156026836120c9565b7f436f6d706f756e64506f6f6c3a3a6465706f7369743a205472616e736665722081527f6661696c65640000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611e74601f836120c9565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300815260200192915050565b61173a816120ee565b61173a816120f1565b602081016103ff8284611740565b60608101611ece8286611731565b611edb6020830185611740565b6116186040830184611ea0565b60408101611ef68285611731565b6104c66020830184611ea0565b60408101611f118285611740565b6104c66020830184611740565b60408101611ef68285611740565b602081016103ff8284611749565b602081016103ff8284611752565b602080825281016104c6818461175b565b602080825281016103ff81611793565b602080825281016103ff816117f2565b602080825281016103ff81611851565b602080825281016103ff816118b0565b602080825281016103ff8161190f565b602080825281016103ff8161196e565b602080825281016103ff816119a7565b602080825281016103ff81611a06565b602080825281016103ff81611a3f565b602080825281016103ff81611a78565b602080825281016103ff81611ad7565b602080825281016103ff81611b36565b602080825281016103ff81611b95565b602080825281016103ff81611bf4565b602080825281016103ff81611c2d565b602080825281016103ff81611c8c565b602080825281016103ff81611ceb565b602080825281016103ff81611d4a565b602080825281016103ff81611da9565b602080825281016103ff81611e08565b602080825281016103ff81611e67565b602081016103ff8284611ea0565b602081016103ff8284611ea9565b5190565b90815260200190565b60006103ff826120e2565b151590565b6001600160a01b031690565b90565b60ff1690565b60006103ff825b60006103ff826120d2565b60005b8381101561212457818101518382015260200161210c565b83811115612133576000848401525b50505050565b601f01601f19169056fea265627a7a72305820ca42dd174f093c809029b50ef07586a3247aa1fd8ce92e353df55a70ad2e62096c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a35760003560e01c806370a08231116100ee578063a457c2d711610097578063c89039c511610071578063c89039c514610317578063dd62ed3e1461031f578063f14faf6f14610332578063f2fde38b14610345576101a3565b8063a457c2d7146102de578063a9059cbb146102f1578063b6b55f2514610304576101a3565b80638f32d59b116100c85780638f32d59b146102b957806395d89b41146102c1578063a0e976b6146102c9576101a3565b806370a0823114610296578063715018a6146102a95780638da5cb5b146102b1576101a3565b8063313ce5671161015057806339f9446e1161012a57806339f9446e146102735780635aa6e6751461027b5780635b730e6914610283576101a3565b8063313ce5671461023657806338af3eed1461024b5780633950935114610260576101a3565b806318160ddd1161018157806318160ddd146101fb57806323b872dd146102105780632e1a7d4d14610223576101a3565b806306fdde03146101a8578063095ea7b3146101c65780630aaffd2a146101e6575b600080fd5b6101b0610358565b6040516101bd9190611f48565b60405180910390f35b6101d96101d43660046116a7565b6103ee565b6040516101bd9190611f2c565b6101f96101f43660046115fa565b610405565b005b61020361046f565b6040516101bd91906120a9565b6101d961021e36600461165a565b610475565b6101f96102313660046116f5565b6104cd565b61023e610651565b6040516101bd91906120b7565b61025361065a565b6040516101bd9190611eb2565b6101d961026e3660046116a7565b610669565b6102036106a5565b61025361080c565b6102036102913660046116a7565b61081b565b6102036102a43660046115fa565b6109db565b6101f96109f6565b610253610a7a565b6101d9610a8e565b6101b0610aa4565b6102d1610b05565b6040516101bd9190611f3a565b6101d96102ec3660046116a7565b610b14565b6101d96102ff3660046116a7565b610b50565b6101f96103123660046116f5565b610b5d565b6102d1610ce9565b61020361032d366004611620565b610cf8565b6101f96103403660046116f5565b610d23565b6101f96103533660046115fa565b610ea5565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050905090565b60006103fb338484610ed5565b5060015b92915050565b61040d610a8e565b61043557604051600160e51b62461bcd02815260040161042c90612029565b60405180910390fd5b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60025490565b6000610482848484610f8f565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546104c29186916104bd908663ffffffff61109116565b610ed5565b5060015b9392505050565b6104d733826110bc565b6006546040517f852a12e30000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063852a12e3906105209084906004016120a9565b602060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105729190810190611713565b1561059257604051600160e51b62461bcd02815260040161042c90611f69565b6007546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a9059cbb906105dd9033908590600401611ee8565b602060405180830381600087803b1580156105f757600080fd5b505af115801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061062f91908101906116d7565b61064e57604051600160e51b62461bcd02815260040161042c90611fe9565b50565b60055460ff1690565b6009546001600160a01b031681565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103fb9185906104bd908663ffffffff61117c16565b60006108076106b261046f565b6006546040517f70a082310000000000000000000000000000000000000000000000000000000081526107fb91670de0b6b3a7640000916107ef916001600160a01b0316906370a082319061070b903090600401611eb2565b60206040518083038186803b15801561072357600080fd5b505afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061075b9190810190611713565b600660009054906101000a90046001600160a01b03166001600160a01b031663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107ab57600080fd5b505af11580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107e39190810190611713565b9063ffffffff6111a416565b9063ffffffff6111e116565b9063ffffffff61109116565b905090565b6008546001600160a01b031681565b6009546000906001600160a01b0316331461084b57604051600160e51b62461bcd02815260040161042c90611f99565b6006546040517f852a12e30000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063852a12e3906108949085906004016120a9565b602060405180830381600087803b1580156108ae57600080fd5b505af11580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108e69190810190611713565b1561090657604051600160e51b62461bcd02815260040161042c90611fb9565b61090e61046f565b610916611219565b101561093757604051600160e51b62461bcd02815260040161042c90612079565b6007546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a9059cbb906109829086908690600401611f1e565b602060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109d491908101906116d7565b5092915050565b6001600160a01b031660009081526020819052604090205490565b6109fe610a8e565b610a1d57604051600160e51b62461bcd02815260040161042c90612029565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805474ffffffffffffffffffffffffffffffffffffffff0019169055565b60055461010090046001600160a01b031690565b60055461010090046001600160a01b0316331490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e45780601f106103b9576101008083540402835291602001916103e4565b6006546001600160a01b031681565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103fb9185906104bd908663ffffffff61109116565b60006103fb338484610f8f565b6007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd90610baa90339030908690600401611ec0565b602060405180830381600087803b158015610bc457600080fd5b505af1158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bfc91908101906116d7565b610c1b57604051600160e51b62461bcd02815260040161042c90612089565b610c2481611329565b6006546040517fa0712d680000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a0712d6890610c6d9084906004016120a9565b602060405180830381600087803b158015610c8757600080fd5b505af1158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cbf9190810190611713565b15610cdf57604051600160e51b62461bcd02815260040161042c90612059565b61064e3382611476565b6007546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd90610d7090339030908690600401611ec0565b602060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dc291908101906116d7565b610de157604051600160e51b62461bcd02815260040161042c90612009565b610dea81611329565b6006546040517fa0712d680000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a0712d6890610e339084906004016120a9565b602060405180830381600087803b158015610e4d57600080fd5b505af1158015610e61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e859190810190611713565b1561064e57604051600160e51b62461bcd02815260040161042c90611ff9565b610ead610a8e565b610ecc57604051600160e51b62461bcd02815260040161042c90612029565b61064e8161152d565b6001600160a01b038316610efe57604051600160e51b62461bcd02815260040161042c90612069565b6001600160a01b038216610f2757604051600160e51b62461bcd02815260040161042c90611f89565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f829085906120a9565b60405180910390a3505050565b6001600160a01b038316610fb857604051600160e51b62461bcd02815260040161042c90612049565b6001600160a01b038216610fe157604051600160e51b62461bcd02815260040161042c90611f59565b6001600160a01b03831660009081526020819052604090205461100a908263ffffffff61109116565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461103f908263ffffffff61117c16565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f829085906120a9565b6000828211156110b657604051600160e51b62461bcd02815260040161042c90611fc9565b50900390565b6001600160a01b0382166110e557604051600160e51b62461bcd02815260040161042c90612039565b6002546110f8908263ffffffff61109116565b6002556001600160a01b038216600090815260208190526040902054611124908263ffffffff61109116565b6001600160a01b0383166000818152602081905260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111709085906120a9565b60405180910390a35050565b6000828201838110156104c657604051600160e51b62461bcd02815260040161042c90611fa9565b6000826111b3575060006103ff565b828202828482816111c057fe5b04146104c657604051600160e51b62461bcd02815260040161042c90612019565b600080821161120557604051600160e51b62461bcd02815260040161042c90611fd9565b600082848161121057fe5b04949350505050565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815260009161080791670de0b6b3a7640000916107ef916001600160a01b03909116906370a0823190611277903090600401611eb2565b60206040518083038186803b15801561128f57600080fd5b505afa1580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112c79190810190611713565b600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561131557600080fd5b505afa1580156107bf573d6000803e3d6000fd5b6007546006546040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815283926001600160a01b039081169263dd62ed3e926113799230921690600401611f03565b60206040518083038186803b15801561139157600080fd5b505afa1580156113a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113c99190810190611713565b101561064e576007546006546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263095ea7b3926114209291169060001990600401611f1e565b602060405180830381600087803b15801561143a57600080fd5b505af115801561144e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061147291908101906116d7565b5050565b6001600160a01b03821661149f57604051600160e51b62461bcd02815260040161042c90612099565b6002546114b2908263ffffffff61117c16565b6002556001600160a01b0382166000908152602081905260409020546114de908263ffffffff61117c16565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111709085906120a9565b6001600160a01b03811661155657604051600160e51b62461bcd02815260040161042c90611f79565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60006104c682356120d2565b60006104c682516120dd565b60006104c682356120ee565b60006104c682516120ee565b60006020828403121561160c57600080fd5b600061161884846115ca565b949350505050565b6000806040838503121561163357600080fd5b600061163f85856115ca565b9250506020611650858286016115ca565b9150509250929050565b60008060006060848603121561166f57600080fd5b600061167b86866115ca565b935050602061168c868287016115ca565b925050604061169d868287016115e2565b9150509250925092565b600080604083850312156116ba57600080fd5b60006116c685856115ca565b9250506020611650858286016115e2565b6000602082840312156116e957600080fd5b600061161884846115d6565b60006020828403121561170757600080fd5b600061161884846115e2565b60006020828403121561172557600080fd5b600061161884846115ee565b61173a816120f7565b82525050565b61173a816120d2565b61173a816120dd565b61173a816120fe565b6000611766826120c5565b61177081856120c9565b9350611780818560208601612109565b61178981612139565b9093019392505050565b60006117a06023836120c9565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006117ff602e836120c9565b7f436f6d706f756e64506f6f6c3a3a77697468647261773a20436f6d706f756e6481527f2072656465656d206661696c6564000000000000000000000000000000000000602082015260400192915050565b600061185e6026836120c9565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015260400192915050565b60006118bd6022836120c9565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f7373000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b600061191c603b836120c9565b7f436f6d706f756e64506f6f6c3a3a6f6e6c7942656e65666963696172793a204f81527f6e6c792063616c6c61626c652062792062656e65666963696172790000000000602082015260400192915050565b600061197b601b836120c9565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006119b46036836120c9565b7f436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a2081527f436f6d706f756e642072656465656d206661696c656400000000000000000000602082015260400192915050565b6000611a13601e836120c9565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000611a4c601a836120c9565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000815260200192915050565b6000611a856027836120c9565b7f436f6d706f756e64506f6f6c3a3a77697468647261773a205472616e7366657281527f206661696c656400000000000000000000000000000000000000000000000000602082015260400192915050565b6000611ae4602a836120c9565b7f436f6d706f756e64506f6f6c3a3a646f6e6174653a20436f6d706f756e64206d81527f696e74206661696c656400000000000000000000000000000000000000000000602082015260400192915050565b6000611b436025836120c9565b7f436f6d706f756e64506f6f6c3a3a646f6e6174653a205472616e73666572206681527f61696c6564000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611ba26021836120c9565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81527f7700000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611c016020836120c9565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000611c3a6021836120c9565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381527f7300000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611c996025836120c9565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611cf8602b836120c9565b7f436f6d706f756e64506f6f6c3a3a6465706f7369743a20436f6d706f756e642081527f6d696e74206661696c6564000000000000000000000000000000000000000000602082015260400192915050565b6000611d576024836120c9565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f7265737300000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611db6603f836120c9565b7f436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a2081527f4e6f7420656e6f75676820657863657373206465706f73697420746f6b656e00602082015260400192915050565b6000611e156026836120c9565b7f436f6d706f756e64506f6f6c3a3a6465706f7369743a205472616e736665722081527f6661696c65640000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611e74601f836120c9565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300815260200192915050565b61173a816120ee565b61173a816120f1565b602081016103ff8284611740565b60608101611ece8286611731565b611edb6020830185611740565b6116186040830184611ea0565b60408101611ef68285611731565b6104c66020830184611ea0565b60408101611f118285611740565b6104c66020830184611740565b60408101611ef68285611740565b602081016103ff8284611749565b602081016103ff8284611752565b602080825281016104c6818461175b565b602080825281016103ff81611793565b602080825281016103ff816117f2565b602080825281016103ff81611851565b602080825281016103ff816118b0565b602080825281016103ff8161190f565b602080825281016103ff8161196e565b602080825281016103ff816119a7565b602080825281016103ff81611a06565b602080825281016103ff81611a3f565b602080825281016103ff81611a78565b602080825281016103ff81611ad7565b602080825281016103ff81611b36565b602080825281016103ff81611b95565b602080825281016103ff81611bf4565b602080825281016103ff81611c2d565b602080825281016103ff81611c8c565b602080825281016103ff81611ceb565b602080825281016103ff81611d4a565b602080825281016103ff81611da9565b602080825281016103ff81611e08565b602080825281016103ff81611e67565b602081016103ff8284611ea0565b602081016103ff8284611ea9565b5190565b90815260200190565b60006103ff826120e2565b151590565b6001600160a01b031690565b90565b60ff1690565b60006103ff825b60006103ff826120d2565b60005b8381101561212457818101518382015260200161210c565b83811115612133576000848401525b50505050565b601f01601f19169056fea265627a7a72305820ca42dd174f093c809029b50ef07586a3247aa1fd8ce92e353df55a70ad2e62096c6578706572696d656e74616cf50037",
  "sourceMap": "848:5797:3:-;;;1611:707;8:9:-1;5:2;;;30:1;27;20:12;5:2;1611:707:3;;;;;;;;;;;;;;;;;;;;;;;;1845:5;1852:7;1861:2;512:4:9;504:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;526:16:9;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:9;:20;;-1:-1:-1;;552:20:9;;;;;;;;;;-1:-1:-1;;;;;;657:19:7;552:20:9;666:10:7;657:19;;;;;;;;;;691:40;;-1:-1:-1;;;;;724:6:7;;;;;;-1:-1:-1;;;;691:40:7;;-1:-1:-1;;691:40:7;1894:13:3;:30;;-1:-1:-1;;;;;1894:30:3;;;-1:-1:-1;;;;;;1894:30:3;;;;;;;1934:12;:28;;;;;;;;;;;1972:11;:26;;;;;;;;;;;;;;;2009:23;1894:30;2009:20;;;;;:23;;:::i;:::-;2109:16;;;2123:1;2109:16;;;;;;;;;2082:24;;2109:16;;;;;;105:10:-1;2109:16:3;88:34:-1;-1:-1;;2156:13:3;;2135:10;;;;-1:-1:-1;;;;;;2156:13:3;;2135:10;;-1:-1:-1;2156:13:3;;2135:10;;;;-1:-1:-1;;;;;2135:35:3;;;:10;;;;;;;;;:35;2203:34;;;;;2180:20;;2203:25;;;;;:34;;2229:7;;2203:34;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2203:34:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2203:34:3;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2203:34:3;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;2203:34:3;;;;;;;;;2180:57;;2255:6;2262:1;2255:9;;;;;;;;;;;;;;2268:1;2255:14;2247:64;;;;;;;;;;;;;;;;;;;;;;1611:707;;;;;;;;848:5797;;6349:294;6419:12;;6465:13;;6419:61;;;;;6483:8;;-1:-1:-1;;;;;6419:12:3;;;;:22;;:61;;6450:4;;6465:13;;6419:61;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6419:61:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6419:61:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6419:61:3;;;;;;;;;:72;6416:221;;;6506:12;;6535:13;;6506:120;;;;;-1:-1:-1;;;;;6506:12:3;;;;:20;;:120;;6535:13;;;-1:-1:-1;;6558:66:3;6506:120;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6506:120:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6506:120:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6506:120:3;;;;;;;;;;6416:221;6349:294;:::o;848:5797::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;848:5797:3;;;-1:-1:-1;848:5797:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;152:722;;280:3;273:4;265:6;261:17;257:27;247:2;;298:1;295;288:12;247:2;328:6;322:13;350:80;365:64;422:6;365:64;;;350:80;;;341:89;;447:5;472:6;465:5;458:21;502:4;494:6;490:17;480:27;;524:4;519:3;515:14;508:21;;577:6;624:3;616:4;608:6;604:17;599:3;595:27;592:36;589:2;;;641:1;638;631:12;589:2;666:1;651:217;676:6;673:1;670:13;651:217;;;734:3;756:48;800:3;788:10;756:48;;;744:61;;-1:-1;828:4;819:14;;;;847;;;;;698:1;691:9;651:217;;;655:14;240:634;;;;;;;;882:116;;957:36;985:6;979:13;957:36;;1005:166;;1105:61;1158:6;1152:13;1105:61;;1507:444;;1620:3;1613:4;1605:6;1601:17;1597:27;1587:2;;1638:1;1635;1628:12;1587:2;1668:6;1662:13;1690:65;1705:49;1747:6;1705:49;;1690:65;1681:74;;1775:6;1768:5;1761:21;1811:4;1803:6;1799:17;1844:4;1837:5;1833:16;1879:3;1870:6;1865:3;1861:16;1858:25;1855:2;;;1896:1;1893;1886:12;1855:2;1906:39;1938:6;1933:3;1928;1906:39;;;1580:371;;;;;;;;1959:122;;2037:39;2068:6;2062:13;2037:39;;2088:392;;2228:2;2216:9;2207:7;2203:23;2199:32;2196:2;;;2244:1;2241;2234:12;2196:2;2279:24;;-1:-1;;;;;2312:30;;2309:2;;;2355:1;2352;2345:12;2309:2;2375:89;2456:7;2447:6;2436:9;2432:22;2375:89;;;2365:99;2190:290;-1:-1;;;;2190:290;2487:257;;2599:2;2587:9;2578:7;2574:23;2570:32;2567:2;;;2615:1;2612;2605:12;2567:2;2650:1;2667:61;2720:7;2700:9;2667:61;;2751:1258;;;;;;;3028:3;3016:9;3007:7;3003:23;2999:33;2996:2;;;3045:1;3042;3035:12;2996:2;3080:24;;-1:-1;;;;;3113:30;;3110:2;;;3156:1;3153;3146:12;3110:2;3176:74;3242:7;3233:6;3222:9;3218:22;3176:74;;;3166:84;;3059:197;3308:2;3297:9;3293:18;3287:25;-1:-1;;;;;3324:6;3321:30;3318:2;;;3364:1;3361;3354:12;3318:2;3384:74;3450:7;3441:6;3430:9;3426:22;3384:74;;;3374:84;;3266:198;3495:2;3513:84;3589:7;3580:6;3569:9;3565:22;3513:84;;;3503:94;;3474:129;3634:2;3652:86;3730:7;3721:6;3710:9;3706:22;3652:86;;;3642:96;;3613:131;3775:3;3794:79;3865:7;3856:6;3845:9;3841:22;3794:79;;;3784:89;;3754:125;3910:3;3929:64;3985:7;3976:6;3965:9;3961:22;3929:64;;;3919:74;;3889:110;2990:1019;;;;;;;;;4016:263;;4131:2;4119:9;4110:7;4106:23;4102:32;4099:2;;;4147:1;4144;4137:12;4099:2;4182:1;4199:64;4255:7;4235:9;4199:64;;4287:173;;4374:46;4416:3;4408:6;4374:46;;;-1:-1;;4449:4;4440:14;;4367:93;4468:110;4541:31;4566:5;4541:31;;;4536:3;4529:44;4523:55;;;4743:621;;4888:54;4936:5;4888:54;;;4955:86;5034:6;5029:3;4955:86;;;4948:93;;5061:56;5111:5;5061:56;;;5138:1;5123:219;5148:6;5145:1;5142:13;5123:219;;;5195:63;5254:3;5245:6;5239:13;5195:63;;;5188:70;;5275:60;5328:6;5275:60;;;5265:70;-1:-1;5170:1;5163:9;5123:219;;;-1:-1;5355:3;;4867:497;-1:-1;;;;4867:497;5373:465;;5533:67;5597:2;5592:3;5533:67;;;5633:66;5613:87;;5734:66;5729:2;5720:12;;5713:88;5829:2;5820:12;;5519:319;-1:-1;;5519:319;5846:120;5929:31;5954:5;5929:31;;5973:324;6119:2;6104:18;;6133:71;6108:9;6177:6;6133:71;;;6215:72;6283:2;6272:9;6268:18;6259:6;6215:72;;6304:324;6450:2;6435:18;;6464:71;6439:9;6508:6;6464:71;;;6546:72;6614:2;6603:9;6599:18;6590:6;6546:72;;6635:361;6803:2;6817:47;;;6788:18;;6878:108;6788:18;6972:6;6878:108;;7003:407;7194:2;7208:47;;;7179:18;;7269:131;7179:18;7269:131;;;7261:139;7165:245;-1:-1;;7165:245;7417:256;7479:2;7473:9;7505:17;;;-1:-1;;;;;7565:34;;7601:22;;;7562:62;7559:2;;;7637:1;7634;7627:12;7559:2;7653;7646:22;7457:216;;-1:-1;7457:216;7680:258;;-1:-1;;;;;7831:6;7828:30;7825:2;;;7871:1;7868;7861:12;7825:2;-1:-1;7900:4;7888:17;;;7918:15;;7762:176;7945:259;;-1:-1;;;;;8081:6;8078:30;8075:2;;;8121:1;8118;8111:12;8075:2;-1:-1;8194:4;8165;8142:17;;;;-1:-1;;8138:33;8184:15;;8012:192;8213:121;8322:4;8310:17;;8291:43;8343:107;8433:12;;8417:33;8589:178;8707:19;;;8756:4;8747:14;;8700:67;8947:105;;-1:-1;;;;;9128:54;;9016:31;9111:76;9392:92;9465:13;9458:21;;9441:43;9491:127;;9582:31;9607:5;9582:31;;10106:268;10171:1;10178:101;10192:6;10189:1;10186:13;10178:101;;;10259:11;;;10253:18;10240:11;;;10233:39;10214:2;10207:10;10178:101;;;10294:6;10291:1;10288:13;10285:2;;;10359:1;10350:6;10345:3;10341:16;10334:27;10285:2;10155:219;;;;;;848:5797:3;;;;;;",
  "deployedSourceMap": "848:5797:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;848:5797:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:9;;;:::i;:::-;;;;;;;;;;;;;;;;2453:145:8;;;;;;;;;:::i;:::-;;;;;;;;2800:115:3;;;;;;;;;:::i;:::-;;1514:89:8;;;:::i;:::-;;;;;;;;3055:252;;;;;;;;;:::i;4745:304:3:-;;;;;;;;;:::i;1478:81:9:-;;;:::i;:::-;;;;;;;;1096:26:3;;;:::i;:::-;;;;;;;;3702:203:8;;;;;;;;;:::i;5963:193:3:-;;;:::i;1065:25::-;;;:::i;3294:527::-;;;;;;;;;:::i;1661:108:8:-;;;;;;;;;:::i;1599:137:7:-;;;:::i;814:77::-;;;:::i;1165:90::-;;;:::i;838:85:9:-;;;:::i;992:35:3:-;;;:::i;:::-;;;;;;;;4392:213:8;;;;;;;;;:::i;1972:153::-;;;;;;;;;:::i;4154:350:3:-;;;;;;;;;:::i;1033:26::-;;;:::i;2183:132:8:-;;;;;;;;;:::i;5398:306:3:-;;;;;;;;;:::i;1885:107:7:-;;;;;;;;;:::i;644:81:9:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2453:145:8:-;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;-1:-1:-1;2587:4:8;2453:145;;;;;:::o;2800:115:3:-;1018:9:7;:7;:9::i;:::-;1010:54;;;;-1:-1:-1;;;;;1010:54:7;;;;;;;;;;;;;;;;;2879:11:3;:29;;;;-1:-1:-1;;;;;2879:29:3;;;;;;;;;;2800:115::o;1514:89:8:-;1584:12;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;-1:-1:-1;;;;;3235:19:8;;;;;;:11;:19;;;;;;;;3223:10;3235:31;;;;;;;;;3206:73;;3215:6;;3235:43;;3271:6;3235:43;:35;:43;:::i;:::-;3206:8;:73::i;:::-;-1:-1:-1;3296:4:8;3055:252;;;;;;:::o;4745:304:3:-;4797:26;4803:10;4815:7;4797:5;:26::i;:::-;4842:13;;:39;;;;;-1:-1:-1;;;;;4842:13:3;;;;:30;;:39;;4873:7;;4842:39;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4842:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4842:39:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4842:39:3;;;;;;;;;:44;4834:103;;;;-1:-1:-1;;;;;4834:103:3;;;;;;;;;4956:12;;:42;;;;;-1:-1:-1;;;;;4956:12:3;;;;:21;;:42;;4978:10;;4990:7;;4956:42;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4956:42:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4956:42:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4956:42:3;;;;;;;;;4948:94;;;;-1:-1:-1;;;;;4948:94:3;;;;;;;;;4745:304;:::o;1478:81:9:-;1543:9;;;;1478:81;:::o;1096:26:3:-;;;-1:-1:-1;;;;;1096:26:3;;:::o;3702:203:8:-;3807:10;3782:4;3828:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3828:32:8;;;;;;;;;;3782:4;;3798:79;;3819:7;;3828:48;;3865:10;3828:48;:36;:48;:::i;5963:193:3:-;6010:7;6036:113;6135:13;:11;:13::i;:::-;6076;;:38;;;;;6036:94;;977:8;;6036:79;;-1:-1:-1;;;;;6076:13:3;;:23;;:38;;6108:4;;6076:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6076:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6076:38:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6076:38:3;;;;;;;;;6036:13;;;;;;;;;-1:-1:-1;;;;;6036:13:3;-1:-1:-1;;;;;6036:33:3;;:35;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6036:35:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6036:35:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6036:35:3;;;;;;;;;:39;:79;:39;:79;:::i;:::-;:83;:94;:83;:94;:::i;:::-;:98;:113;:98;:113;:::i;:::-;6029:120;;5963:193;:::o;1065:25::-;;;-1:-1:-1;;;;;1065:25:3;;:::o;3294:527::-;2475:11;;3382:7;;-1:-1:-1;;;;;2475:11:3;2461:10;:25;2453:97;;;;-1:-1:-1;;;;;2453:97:3;;;;;;;;;3409:13;;:39;;;;;-1:-1:-1;;;;;3409:13:3;;;;:30;;:39;;3440:7;;3409:39;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3409:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3409:39:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3409:39:3;;;;;;;;;:44;3401:111;;;;-1:-1:-1;;;;;3401:111:3;;;;;;;;;3687:13;:11;:13::i;:::-;3656:27;:25;:27::i;:::-;:44;;3648:120;;;;-1:-1:-1;;;;;3648:120:3;;;;;;;;;3779:12;;:35;;;;;-1:-1:-1;;;;;3779:12:3;;;;:21;;:35;;3801:3;;3806:7;;3779:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3779:35:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3779:35:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3779:35:3;;;;;;;;;;3294:527;;;;:::o;1661:108:8:-;-1:-1:-1;;;;;1744:18:8;1718:7;1744:18;;;;;;;;;;;;1661:108::o;1599:137:7:-;1018:9;:7;:9::i;:::-;1010:54;;;;-1:-1:-1;;;;;1010:54:7;;;;;;;;;1681:6;;1660:40;;1697:1;;1681:6;;;-1:-1:-1;;;;;1681:6:7;;1660:40;;1697:1;;1660:40;1710:6;:19;;-1:-1:-1;;1710:19:7;;;1599:137::o;814:77::-;878:6;;;;;-1:-1:-1;;;;;878:6:7;;814:77::o;1165:90::-;1242:6;;;;;-1:-1:-1;;;;;1242:6:7;1228:10;:20;;1165:90::o;838:85:9:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;992:35:3;;;-1:-1:-1;;;;;992:35:3;;:::o;4392:213:8:-;4502:10;4477:4;4523:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4523:32:8;;;;;;;;;;4477:4;;4493:84;;4514:7;;4523:53;;4560:15;4523:53;:36;:53;:::i;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;4154:350:3:-;4213:12;;:61;;;;;-1:-1:-1;;;;;4213:12:3;;;;:25;;:61;;4239:10;;4259:4;;4266:7;;4213:61;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4213:61:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4213:61:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4213:61:3;;;;;;;;;4205:112;;;;-1:-1:-1;;;;;4205:112:3;;;;;;;;;4328:29;4349:7;4328:20;:29::i;:::-;4376:13;;:27;;;;;-1:-1:-1;;;;;4376:13:3;;;;:18;;:27;;4395:7;;4376:27;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4376:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4376:27:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4376:27:3;;;;;;;;;:32;4368:88;;;;-1:-1:-1;;;;;4368:88:3;;;;;;;;;4471:26;4477:10;4489:7;4471:5;:26::i;1033:::-;;;-1:-1:-1;;;;;1033:26:3;;:::o;2183:132:8:-;-1:-1:-1;;;;;2281:18:8;;;2255:7;2281:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2183:132::o;5398:306:3:-;5456:12;;:61;;;;;-1:-1:-1;;;;;5456:12:3;;;;:25;;:61;;5482:10;;5502:4;;5509:7;;5456:61;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5456:61:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5456:61:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5456:61:3;;;;;;;;;5448:111;;;;-1:-1:-1;;;;;5448:111:3;;;;;;;;;5570:29;5591:7;5570:20;:29::i;:::-;5618:13;;:27;;;;;-1:-1:-1;;;;;5618:13:3;;;;:18;;:27;;5637:7;;5618:27;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5618:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5618:27:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5618:27:3;;;;;;;;;:32;5610:87;;;;-1:-1:-1;;;;;5610:87:3;;;;;;;;1885:107:7;1018:9;:7;:9::i;:::-;1010:54;;;;-1:-1:-1;;;;;1010:54:7;;;;;;;;;1957:28;1976:8;1957:18;:28::i;7117:329:8:-;-1:-1:-1;;;;;7209:19:8;;7201:68;;;;-1:-1:-1;;;;;7201:68:8;;;;;;;;;-1:-1:-1;;;;;7287:21:8;;7279:68;;;;-1:-1:-1;;;;;7279:68:8;;;;;;;;;-1:-1:-1;;;;;7358:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:35;;;7408:31;;;;;7388:5;;7408:31;;;;;;;;;;7117:329;;;:::o;5079:422::-;-1:-1:-1;;;;;5176:20:8;;5168:70;;;;-1:-1:-1;;;;;5168:70:8;;;;;;;;;-1:-1:-1;;;;;5256:23:8;;5248:71;;;;-1:-1:-1;;;;;5248:71:8;;;;;;;;;-1:-1:-1;;;;;5350:17:8;;:9;:17;;;;;;;;;;;:29;;5372:6;5350:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5330:17:8;;;:9;:17;;;;;;;;;;;:49;;;;5412:20;;;;;;;:32;;5437:6;5412:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5389:20:8;;;:9;:20;;;;;;;;;;;;:55;;;;5459:35;;;;;;;;;;5487:6;;5459:35;;1274:179:6;1332:7;1364:1;1359;:6;;1351:49;;;;-1:-1:-1;;;;;1351:49:6;;;;;;;;;-1:-1:-1;1422:5:6;;;1274:179::o;6392:300:8:-;-1:-1:-1;;;;;6466:21:8;;6458:67;;;;-1:-1:-1;;;;;6458:67:8;;;;;;;;;6551:12;;:23;;6568:5;6551:23;:16;:23;:::i;:::-;6536:12;:38;-1:-1:-1;;;;;6605:18:8;;:9;:18;;;;;;;;;;;:29;;6628:5;6605:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6584:18:8;;:9;:18;;;;;;;;;;;:50;;;;6649:36;;;;;;6679:5;;6649:36;;;;;;;;;;6392:300;;:::o;834:176:6:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;;;938:46:6;;;;;;;;1693:458;1751:7;1991:6;1987:45;;-1:-1:-1;2020:1:6;2013:8;;1987:45;2054:5;;;2058:1;2054;:5;:1;2077:5;;;;;:10;2069:56;;;;-1:-1:-1;;;;;2069:56:6;;;;;;;;2606:326;2664:7;2761:1;2757;:5;2749:44;;;;-1:-1:-1;;;;;2749:44:6;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;;2606:326;-1:-1:-1;;;;2606:326:6:o;6162:181:3:-;6282:13;;:38;;;;;6217:7;;6243:93;;977:8;;6243:78;;-1:-1:-1;;;;;6282:13:3;;;;:23;;:38;;6314:4;;6282:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6282:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6282:38:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6282:38:3;;;;;;;;;6243:13;;;;;;;;;-1:-1:-1;;;;;6243:13:3;-1:-1:-1;;;;;6243:32:3;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6243:34:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;6349:294:3;6419:12;;6465:13;;6419:61;;;;;6483:8;;-1:-1:-1;;;;;6419:12:3;;;;:22;;:61;;6450:4;;6465:13;;6419:61;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6419:61:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6419:61:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6419:61:3;;;;;;;;;:72;6416:221;;;6506:12;;6535:13;;6506:120;;;;;-1:-1:-1;;;;;6506:12:3;;;;:20;;:120;;6535:13;;;-1:-1:-1;;6558:66:3;6506:120;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6506:120:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6506:120:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6506:120:3;;;;;;;;;;6349:294;:::o;5771:302:8:-;-1:-1:-1;;;;;5846:21:8;;5838:65;;;;-1:-1:-1;;;;;5838:65:8;;;;;;;;;5929:12;;:24;;5946:6;5929:24;:16;:24;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:8;;:9;:18;;;;;;;;;;;:30;;6007:6;5984:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;5963:18:8;;:9;:18;;;;;;;;;;;:51;;;;6029:37;;5963:18;;:9;6029:37;;;;6059:6;;6029:37;;2093:225:7;-1:-1:-1;;;;;2166:22:7;;2158:73;;;;-1:-1:-1;;;;;2158:73:7;;;;;;;;;2267:6;;2246:38;;-1:-1:-1;;;;;2246:38:7;;;;2267:6;;;;;2246:38;;;;;2294:6;:17;;-1:-1:-1;;;;;2294:17:7;;;;;-1:-1:-1;;2294:17:7;;;;;;;;;2093:225::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;130:116;;205:36;233:6;227:13;205:36;;253:118;;320:46;358:6;345:20;320:46;;378:122;;456:39;487:6;481:13;456:39;;507:241;;611:2;599:9;590:7;586:23;582:32;579:2;;;627:1;624;617:12;579:2;662:1;679:53;724:7;704:9;679:53;;;669:63;573:175;-1:-1;;;;573:175;755:366;;;876:2;864:9;855:7;851:23;847:32;844:2;;;892:1;889;882:12;844:2;927:1;944:53;989:7;969:9;944:53;;;934:63;;906:97;1034:2;1052:53;1097:7;1088:6;1077:9;1073:22;1052:53;;;1042:63;;1013:98;838:283;;;;;;1128:491;;;;1266:2;1254:9;1245:7;1241:23;1237:32;1234:2;;;1282:1;1279;1272:12;1234:2;1317:1;1334:53;1379:7;1359:9;1334:53;;;1324:63;;1296:97;1424:2;1442:53;1487:7;1478:6;1467:9;1463:22;1442:53;;;1432:63;;1403:98;1532:2;1550:53;1595:7;1586:6;1575:9;1571:22;1550:53;;;1540:63;;1511:98;1228:391;;;;;;1626:366;;;1747:2;1735:9;1726:7;1722:23;1718:32;1715:2;;;1763:1;1760;1753:12;1715:2;1798:1;1815:53;1860:7;1840:9;1815:53;;;1805:63;;1777:97;1905:2;1923:53;1968:7;1959:6;1948:9;1944:22;1923:53;;1999:257;;2111:2;2099:9;2090:7;2086:23;2082:32;2079:2;;;2127:1;2124;2117:12;2079:2;2162:1;2179:61;2232:7;2212:9;2179:61;;2263:241;;2367:2;2355:9;2346:7;2342:23;2338:32;2335:2;;;2383:1;2380;2373:12;2335:2;2418:1;2435:53;2480:7;2460:9;2435:53;;2511:263;;2626:2;2614:9;2605:7;2601:23;2597:32;2594:2;;;2642:1;2639;2632:12;2594:2;2677:1;2694:64;2750:7;2730:9;2694:64;;2781:142;2872:45;2911:5;2872:45;;;2867:3;2860:58;2854:69;;;2930:120;3013:31;3038:5;3013:31;;3057:111;3134:28;3156:5;3134:28;;3175:170;3280:59;3333:5;3280:59;;3515:347;;3627:39;3660:5;3627:39;;;3678:71;3742:6;3737:3;3678:71;;;3671:78;;3754:52;3799:6;3794:3;3787:4;3780:5;3776:16;3754:52;;;3827:29;3849:6;3827:29;;;3818:39;;;;3607:255;-1:-1;;;3607:255;3870:465;;4030:67;4094:2;4089:3;4030:67;;;4130:66;4110:87;;4231:66;4226:2;4217:12;;4210:88;4326:2;4317:12;;4016:319;-1:-1;;4016:319;4344:465;;4504:67;4568:2;4563:3;4504:67;;;4604:66;4584:87;;4705:66;4700:2;4691:12;;4684:88;4800:2;4791:12;;4490:319;-1:-1;;4490:319;4818:465;;4978:67;5042:2;5037:3;4978:67;;;5078:66;5058:87;;5179:66;5174:2;5165:12;;5158:88;5274:2;5265:12;;4964:319;-1:-1;;4964:319;5292:465;;5452:67;5516:2;5511:3;5452:67;;;5552:66;5532:87;;5653:66;5648:2;5639:12;;5632:88;5748:2;5739:12;;5438:319;-1:-1;;5438:319;5766:465;;5926:67;5990:2;5985:3;5926:67;;;6026:66;6006:87;;6127:66;6122:2;6113:12;;6106:88;6222:2;6213:12;;5912:319;-1:-1;;5912:319;6240:364;;6400:67;6464:2;6459:3;6400:67;;;6500:66;6480:87;;6595:2;6586:12;;6386:218;-1:-1;;6386:218;6613:465;;6773:67;6837:2;6832:3;6773:67;;;6873:66;6853:87;;6974:66;6969:2;6960:12;;6953:88;7069:2;7060:12;;6759:319;-1:-1;;6759:319;7087:364;;7247:67;7311:2;7306:3;7247:67;;;7347:66;7327:87;;7442:2;7433:12;;7233:218;-1:-1;;7233:218;7460:364;;7620:67;7684:2;7679:3;7620:67;;;7720:66;7700:87;;7815:2;7806:12;;7606:218;-1:-1;;7606:218;7833:465;;7993:67;8057:2;8052:3;7993:67;;;8093:66;8073:87;;8194:66;8189:2;8180:12;;8173:88;8289:2;8280:12;;7979:319;-1:-1;;7979:319;8307:465;;8467:67;8531:2;8526:3;8467:67;;;8567:66;8547:87;;8668:66;8663:2;8654:12;;8647:88;8763:2;8754:12;;8453:319;-1:-1;;8453:319;8781:465;;8941:67;9005:2;9000:3;8941:67;;;9041:66;9021:87;;9142:66;9137:2;9128:12;;9121:88;9237:2;9228:12;;8927:319;-1:-1;;8927:319;9255:465;;9415:67;9479:2;9474:3;9415:67;;;9515:66;9495:87;;9616:66;9611:2;9602:12;;9595:88;9711:2;9702:12;;9401:319;-1:-1;;9401:319;9729:364;;9889:67;9953:2;9948:3;9889:67;;;9989:66;9969:87;;10084:2;10075:12;;9875:218;-1:-1;;9875:218;10102:465;;10262:67;10326:2;10321:3;10262:67;;;10362:66;10342:87;;10463:66;10458:2;10449:12;;10442:88;10558:2;10549:12;;10248:319;-1:-1;;10248:319;10576:465;;10736:67;10800:2;10795:3;10736:67;;;10836:66;10816:87;;10937:66;10932:2;10923:12;;10916:88;11032:2;11023:12;;10722:319;-1:-1;;10722:319;11050:465;;11210:67;11274:2;11269:3;11210:67;;;11310:66;11290:87;;11411:66;11406:2;11397:12;;11390:88;11506:2;11497:12;;11196:319;-1:-1;;11196:319;11524:465;;11684:67;11748:2;11743:3;11684:67;;;11784:66;11764:87;;11885:66;11880:2;11871:12;;11864:88;11980:2;11971:12;;11670:319;-1:-1;;11670:319;11998:465;;12158:67;12222:2;12217:3;12158:67;;;12258:66;12238:87;;12359:66;12354:2;12345:12;;12338:88;12454:2;12445:12;;12144:319;-1:-1;;12144:319;12472:465;;12632:67;12696:2;12691:3;12632:67;;;12732:66;12712:87;;12833:66;12828:2;12819:12;;12812:88;12928:2;12919:12;;12618:319;-1:-1;;12618:319;12946:364;;13106:67;13170:2;13165:3;13106:67;;;13206:66;13186:87;;13301:2;13292:12;;13092:218;-1:-1;;13092:218;13318:120;13401:31;13426:5;13401:31;;13445:114;13524:29;13547:5;13524:29;;13566:213;13684:2;13669:18;;13698:71;13673:9;13742:6;13698:71;;13786:451;13968:2;13953:18;;13982:79;13957:9;14034:6;13982:79;;;14072:72;14140:2;14129:9;14125:18;14116:6;14072:72;;;14155;14223:2;14212:9;14208:18;14199:6;14155:72;;14244:340;14398:2;14383:18;;14412:79;14387:9;14464:6;14412:79;;;14502:72;14570:2;14559:9;14555:18;14546:6;14502:72;;14591:324;14737:2;14722:18;;14751:71;14726:9;14795:6;14751:71;;;14833:72;14901:2;14890:9;14886:18;14877:6;14833:72;;14922:324;15068:2;15053:18;;15082:71;15057:9;15126:6;15082:71;;15253:201;15365:2;15350:18;;15379:65;15354:9;15417:6;15379:65;;15461:257;15601:2;15586:18;;15615:93;15590:9;15681:6;15615:93;;15975:301;16113:2;16127:47;;;16098:18;;16188:78;16098:18;16252:6;16188:78;;16283:407;16474:2;16488:47;;;16459:18;;16549:131;16459:18;16549:131;;16697:407;16888:2;16902:47;;;16873:18;;16963:131;16873:18;16963:131;;17111:407;17302:2;17316:47;;;17287:18;;17377:131;17287:18;17377:131;;17525:407;17716:2;17730:47;;;17701:18;;17791:131;17701:18;17791:131;;17939:407;18130:2;18144:47;;;18115:18;;18205:131;18115:18;18205:131;;18353:407;18544:2;18558:47;;;18529:18;;18619:131;18529:18;18619:131;;18767:407;18958:2;18972:47;;;18943:18;;19033:131;18943:18;19033:131;;19181:407;19372:2;19386:47;;;19357:18;;19447:131;19357:18;19447:131;;19595:407;19786:2;19800:47;;;19771:18;;19861:131;19771:18;19861:131;;20009:407;20200:2;20214:47;;;20185:18;;20275:131;20185:18;20275:131;;20423:407;20614:2;20628:47;;;20599:18;;20689:131;20599:18;20689:131;;20837:407;21028:2;21042:47;;;21013:18;;21103:131;21013:18;21103:131;;21251:407;21442:2;21456:47;;;21427:18;;21517:131;21427:18;21517:131;;21665:407;21856:2;21870:47;;;21841:18;;21931:131;21841:18;21931:131;;22079:407;22270:2;22284:47;;;22255:18;;22345:131;22255:18;22345:131;;22493:407;22684:2;22698:47;;;22669:18;;22759:131;22669:18;22759:131;;22907:407;23098:2;23112:47;;;23083:18;;23173:131;23083:18;23173:131;;23321:407;23512:2;23526:47;;;23497:18;;23587:131;23497:18;23587:131;;23735:407;23926:2;23940:47;;;23911:18;;24001:131;23911:18;24001:131;;24149:407;24340:2;24354:47;;;24325:18;;24415:131;24325:18;24415:131;;24563:407;24754:2;24768:47;;;24739:18;;24829:131;24739:18;24829:131;;24977:213;25095:2;25080:18;;25109:71;25084:9;25153:6;25109:71;;25197:205;25311:2;25296:18;;25325:67;25300:9;25365:6;25325:67;;25409:92;25484:12;;25468:33;25509:163;25612:19;;;25661:4;25652:14;;25605:67;25680:105;;25749:31;25774:5;25749:31;;25792:92;25865:13;25858:21;;25841:43;25891:128;-1:-1;;;;;25960:54;;25943:76;26026:79;26095:5;26078:27;26112:88;26190:4;26179:16;;26162:38;26639:129;;26726:37;26757:5;26775:165;;26876:59;26929:5;26876:59;;27637:268;27702:1;27709:101;27723:6;27720:1;27717:13;27709:101;;;27790:11;;;27784:18;27771:11;;;27764:39;27745:2;27738:10;27709:101;;;27825:6;27822:1;27819:13;27816:2;;;27890:1;27881:6;27876:3;27872:16;27865:27;27816:2;27686:219;;;;;27913:97;28001:2;27981:14;-1:-1;;27977:28;;27961:49",
  "source": "pragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport { IERC20 } from \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport { ERC20Detailed } from \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport { ERC20 } from \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport { SafeMath } from \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport { Ownable } from \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport { ICompoundERC20 } from \"./interface/ICompoundERC20.sol\";\nimport { IComptroller } from \"./interface/IComptroller.sol\";\n\n/**\n * @title CompoundPool\n * @author Nate Welch <github.com/flyging>\n * @notice Based on Zefram Lou's implementation https://github.com/ZeframLou/pooled-cdai\n * @dev A bank that will pool compound tokens and allows the beneficiary to withdraw\n */\ncontract CompoundPool is ERC20, ERC20Detailed, Ownable {\n    using SafeMath for uint;\n\n    uint256 internal constant PRECISION = 10 ** 18;\n\n    ICompoundERC20 public compoundToken;\n    IERC20 public depositToken;\n    address public governance;\n    address public beneficiary;\n\n    /**\n     * @notice Constructor\n     * @param _name name of the pool share token\n     * @param _symbol symbol of the pool share token\n     * @param _comptroller the Compound Comptroller contract used to enter the compoundToken's market\n     * @param _compoundToken the Compound Token contract (e.g. cDAI)\n     * @param _depositToken the Deposit Token contract (e.g. DAI)\n     * @param _beneficiary the address that can withdraw excess deposit tokens (interest/donations)\n     */\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        IComptroller _comptroller,\n        ICompoundERC20 _compoundToken,\n        IERC20 _depositToken,\n        address _beneficiary\n    )\n        ERC20Detailed(_name, _symbol, 18)\n        public\n    {\n        compoundToken = _compoundToken;\n        depositToken = _depositToken;\n        beneficiary = _beneficiary;\n\n        _approveDepositToken(1);\n\n        // Enter compound token market\n        address[] memory markets = new address[](1);\n        markets[0] = address(compoundToken);\n        uint[] memory errors = _comptroller.enterMarkets(markets);\n        require(errors[0] == 0, \"Failed to enter compound token market\");\n    }\n\n    /**\n     * @dev used to restrict access of functions to the current beneficiary\n     */\n    modifier onlyBeneficiary() {\n        require(msg.sender == beneficiary, \"CompoundPool::onlyBeneficiary: Only callable by beneficiary\");\n        _;\n    }\n\n    /**\n     * @notice Called by the `owner` to set a new beneficiary\n     * @dev This function will fail if called by a non-owner address\n     * @param _newBeneficiary The address that will become the new beneficiary\n     */\n    function updateBeneficiary(address _newBeneficiary) public onlyOwner {\n        beneficiary = _newBeneficiary;\n    }\n\n    /**\n     * @notice The beneficiary calls this function to withdraw excess deposit tokens\n     * @dev This function will fail if called by a non-beneficiary or if _amount is higher than the excess deposit tokens\n     * @param _to The address that the deposit tokens will be sent to\n     * @param _amount The amount of deposit tokens to send to the `_to` address\n     */\n    function withdrawInterest(address _to, uint256 _amount) public onlyBeneficiary returns (uint256) {\n        require(compoundToken.redeemUnderlying(_amount) == 0, \"CompoundPool::withdrawInterest: Compound redeem failed\");\n\n        //Doing this *after* `redeemUnderlying` so I don't have compoundToken do `exchangeRateCurrent` twice, it's not cheap\n        require(depositTokenStoredBalance() >= totalSupply(), \"CompoundPool::withdrawInterest: Not enough excess deposit token\");\n\n        depositToken.transfer(_to, _amount);\n    }\n\n    /**\n     * @notice Called by someone wishing to deposit to the bank. This amount, plus previous user's balance, will always be withdrawable\n     * @dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\n     * @param _amount The amount of deposit tokens to deposit\n     */\n    function deposit(uint256 _amount) public {\n        require(depositToken.transferFrom(msg.sender, address(this), _amount), \"CompoundPool::deposit: Transfer failed\");\n\n        _approveDepositToken(_amount);\n\n        require(compoundToken.mint(_amount) == 0, \"CompoundPool::deposit: Compound mint failed\");\n    \n        _mint(msg.sender, _amount);\n    }\n\n    /**\n     * @notice Called by someone wishing to withdraw from the bank\n     * @dev This will fail if msg.sender doesn't have at least _amount pool share tokens\n     * @param _amount The amount of deposit tokens to withdraw\n     */\n    function withdraw(uint256 _amount) public {\n        _burn(msg.sender, _amount);\n\n        require(compoundToken.redeemUnderlying(_amount) == 0, \"CompoundPool::withdraw: Compound redeem failed\");\n\n        require(depositToken.transfer(msg.sender, _amount), \"CompoundPool::withdraw: Transfer failed\");\n    }\n\n    /**\n     * @notice Called by someone wishing to donate to the bank. This amount will *not* be added to users balance, and will be usable by the beneficiary.\n     * @dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\n     * @param _amount The amount of deposit tokens to donate\n     */\n    function donate(uint256 _amount) public {\n        require(depositToken.transferFrom(msg.sender, address(this), _amount), \"CompoundPool::donate: Transfer failed\");\n\n        _approveDepositToken(_amount);\n\n        require(compoundToken.mint(_amount) == 0, \"CompoundPool::donate: Compound mint failed\");\n    }\n\n    /**\n     * @notice Returns the amount of deposit tokens that are usable by the beneficiary. Basically, interestEarned+donations\n     * @dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\n     */\n    function excessDepositTokens() public returns (uint256) {\n        return compoundToken.exchangeRateCurrent().mul(compoundToken.balanceOf(address(this))).div(PRECISION).sub(totalSupply());\n    }\n\n    function depositTokenStoredBalance() internal returns (uint256) {\n        return compoundToken.exchangeRateStored().mul(compoundToken.balanceOf(address(this))).div(PRECISION);\n    }\n\n    function _approveDepositToken(uint256 _minimum) internal {\n        if(depositToken.allowance(address(this), address(compoundToken)) < _minimum){\n            depositToken.approve(address(compoundToken),uint256(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff));\n        }\n    }\n}\n",
  "sourcePath": "compound-pooling/contracts/CompoundPool.sol",
  "ast": {
    "absolutePath": "compound-pooling/contracts/CompoundPool.sol",
    "exportedSymbols": {
      "CompoundPool": [
        618
      ]
    },
    "id": 619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 265,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "id": 266,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 268,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1473,
        "src": "58:80:3",
        "symbolAliases": [
          {
            "foreign": 267,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 270,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1404,
        "src": "139:94:3",
        "symbolAliases": [
          {
            "foreign": 269,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 272,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1346,
        "src": "234:78:3",
        "symbolAliases": [
          {
            "foreign": 271,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 274,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 838,
        "src": "313:77:3",
        "symbolAliases": [
          {
            "foreign": 273,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 276,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 949,
        "src": "391:80:3",
        "symbolAliases": [
          {
            "foreign": 275,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "compound-pooling/contracts/interface/ICompoundERC20.sol",
        "file": "./interface/ICompoundERC20.sol",
        "id": 278,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 693,
        "src": "473:64:3",
        "symbolAliases": [
          {
            "foreign": 277,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "compound-pooling/contracts/interface/IComptroller.sol",
        "file": "./interface/IComptroller.sol",
        "id": 280,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 705,
        "src": "538:60:3",
        "symbolAliases": [
          {
            "foreign": 279,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 281,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "873:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1345",
                "typeString": "contract ERC20"
              }
            },
            "id": 282,
            "nodeType": "InheritanceSpecifier",
            "src": "873:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 283,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1403,
              "src": "880:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1403",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 284,
            "nodeType": "InheritanceSpecifier",
            "src": "880:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 285,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 948,
              "src": "895:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$948",
                "typeString": "contract Ownable"
              }
            },
            "id": 286,
            "nodeType": "InheritanceSpecifier",
            "src": "895:7:3"
          }
        ],
        "contractDependencies": [
          948,
          1345,
          1403,
          1472
        ],
        "contractKind": "contract",
        "documentation": "@title CompoundPool\n@author Nate Welch <github.com/flyging>\n@notice Based on Zefram Lou's implementation https://github.com/ZeframLou/pooled-cdai\n@dev A bank that will pool compound tokens and allows the beneficiary to withdraw",
        "fullyImplemented": true,
        "id": 618,
        "linearizedBaseContracts": [
          618,
          948,
          1403,
          1345,
          1472
        ],
        "name": "CompoundPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 289,
            "libraryName": {
              "contractScope": null,
              "id": 287,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 837,
              "src": "915:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$837",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "909:24:3",
            "typeName": {
              "id": 288,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "928:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 294,
            "name": "PRECISION",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "939:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 290,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "939:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 293,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 291,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "977:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 292,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "983:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "977:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 296,
            "name": "compoundToken",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "992:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICompoundERC20_$692",
              "typeString": "contract ICompoundERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 295,
              "name": "ICompoundERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 692,
              "src": "992:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                "typeString": "contract ICompoundERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 298,
            "name": "depositToken",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "1033:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1472",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 297,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1472,
              "src": "1033:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1472",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 300,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "1065:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 299,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1065:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 302,
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "1096:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 301,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1096:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1884:434:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "compoundToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1894:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                        "typeString": "contract ICompoundERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 323,
                      "name": "_compoundToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "1910:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                        "typeString": "contract ICompoundERC20"
                      }
                    },
                    "src": "1894:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                      "typeString": "contract ICompoundERC20"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "depositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "1934:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1472",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "_depositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "1949:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1472",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1934:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1472",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 330,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "1972:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "1986:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1972:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2030:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 334,
                      "name": "_approveDepositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "2009:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:23:3"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "markets",
                      "nodeType": "VariableDeclaration",
                      "scope": 374,
                      "src": "2082:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2082:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 340,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2082:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2123:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2109:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2113:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 343,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2113:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2082:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "2135:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2143:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2135:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "compoundToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "2156:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                            "typeString": "contract ICompoundERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                            "typeString": "contract ICompoundERC20"
                          }
                        ],
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2148:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2148:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2135:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:35:3"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "name": "errors",
                      "nodeType": "VariableDeclaration",
                      "scope": 374,
                      "src": "2180:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 357,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2180:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 358,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2180:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 364,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "2229:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 360,
                        "name": "_comptroller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "2203:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IComptroller_$704",
                          "typeString": "contract IComptroller"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "enterMarkets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "2203:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address[] memory) external returns (uint256[] memory)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2180:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "errors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "2255:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 368,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2262:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2255:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2268:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2255:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c656420746f20656e74657220636f6d706f756e6420746f6b656e206d61726b6574",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2271:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7325dc5fd16c87397620def10a5b5c104d561fa170816dabf0a252489d3f0c8",
                          "typeString": "literal_string \"Failed to enter compound token market\""
                        },
                        "value": "Failed to enter compound token market"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7325dc5fd16c87397620def10a5b5c104d561fa170816dabf0a252489d3f0c8",
                          "typeString": "literal_string \"Failed to enter compound token market\""
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "2247:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:64:3"
                }
              ]
            },
            "documentation": "@notice Constructor\n@param _name name of the pool share token\n@param _symbol symbol of the pool share token\n@param _comptroller the Compound Comptroller contract used to enter the compoundToken's market\n@param _compoundToken the Compound Token contract (e.g. cDAI)\n@param _depositToken the Deposit Token contract (e.g. DAI)\n@param _beneficiary the address that can withdraw excess deposit tokens (interest/donations)",
            "id": 375,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 317,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 304,
                    "src": "1845:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 318,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 306,
                    "src": "1852:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1861:2:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 320,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 316,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1403,
                  "src": "1831:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1403_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1831:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1632:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1661:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "name": "_comptroller",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1692:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IComptroller_$704",
                    "typeString": "contract IComptroller"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 307,
                    "name": "IComptroller",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 704,
                    "src": "1692:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IComptroller_$704",
                      "typeString": "contract IComptroller"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 310,
                  "name": "_compoundToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1727:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                    "typeString": "contract ICompoundERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 309,
                    "name": "ICompoundERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 692,
                    "src": "1727:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                      "typeString": "contract ICompoundERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 312,
                  "name": "_depositToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1766:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1472",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 311,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1472,
                    "src": "1766:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1472",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1796:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1622:200:3"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1884:0:3"
            },
            "scope": 618,
            "src": "1611:707:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "2443:125:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 378,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "2461:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2461:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 380,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "2475:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2461:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a6f6e6c7942656e65666963696172793a204f6e6c792063616c6c61626c652062792062656e6566696369617279",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2488:61:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30869cf775ddc3d53a1fc8ec80e01211dc0e4b6159c9720102eb880cf71d1c54",
                          "typeString": "literal_string \"CompoundPool::onlyBeneficiary: Only callable by beneficiary\""
                        },
                        "value": "CompoundPool::onlyBeneficiary: Only callable by beneficiary"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30869cf775ddc3d53a1fc8ec80e01211dc0e4b6159c9720102eb880cf71d1c54",
                          "typeString": "literal_string \"CompoundPool::onlyBeneficiary: Only callable by beneficiary\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "2453:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2453:97:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:97:3"
                },
                {
                  "id": 385,
                  "nodeType": "PlaceholderStatement",
                  "src": "2560:1:3"
                }
              ]
            },
            "documentation": "@dev used to restrict access of functions to the current beneficiary",
            "id": 387,
            "name": "onlyBeneficiary",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2440:2:3"
            },
            "src": "2416:152:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "2869:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2879:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 395,
                      "name": "_newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "2893:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2879:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:29:3"
                }
              ]
            },
            "documentation": "@notice Called by the `owner` to set a new beneficiary\n@dev This function will fail if called by a non-owner address\n@param _newBeneficiary The address that will become the new beneficiary",
            "id": 399,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 392,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 391,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 881,
                  "src": "2859:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2859:9:3"
              }
            ],
            "name": "updateBeneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "name": "_newBeneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "2827:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2826:25:3"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2869:0:3"
            },
            "scope": 618,
            "src": "2800:115:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "3391:430:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 413,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "3440:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 411,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "3409:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeemUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 634,
                            "src": "3409:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3409:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3452:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3409:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a20436f6d706f756e642072656465656d206661696c6564",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3455:56:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_341654225a8caeb36a7c5dd3c19711613ab4817b0583990ffe50a3b7e8644614",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Compound redeem failed\""
                        },
                        "value": "CompoundPool::withdrawInterest: Compound redeem failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_341654225a8caeb36a7c5dd3c19711613ab4817b0583990ffe50a3b7e8644614",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Compound redeem failed\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "3401:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3401:111:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "3401:111:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 421,
                            "name": "depositTokenStoredBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "3656:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3656:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 423,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "3687:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3687:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3656:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a204e6f7420656e6f75676820657863657373206465706f73697420746f6b656e",
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3702:65:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3b4adf3e1603acff87d3e9de5b6f4125814d00d397b3b0448d69e2aee54506d",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Not enough excess deposit token\""
                        },
                        "value": "CompoundPool::withdrawInterest: Not enough excess deposit token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3b4adf3e1603acff87d3e9de5b6f4125814d00d397b3b0448d69e2aee54506d",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Not enough excess deposit token\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "3648:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:120:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:120:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 432,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3801:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 433,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "3806:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "depositToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "3779:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1472",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1426,
                      "src": "3779:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3779:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3779:35:3"
                }
              ]
            },
            "documentation": "@notice The beneficiary calls this function to withdraw excess deposit tokens\n@dev This function will fail if called by a non-beneficiary or if _amount is higher than the excess deposit tokens\n@param _to The address that the deposit tokens will be sent to\n@param _amount The amount of deposit tokens to send to the `_to` address",
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 406,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 405,
                  "name": "onlyBeneficiary",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 387,
                  "src": "3357:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3357:15:3"
              }
            ],
            "name": "withdrawInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "3320:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "3333:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3319:30:3"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "3382:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3381:9:3"
            },
            "scope": 618,
            "src": "3294:527:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "4195:309:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 445,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "4239:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4239:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 448,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1517,
                                "src": "4259:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              ],
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4251:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4251:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 450,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "4266:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 443,
                            "name": "depositToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "4213:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1472",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1455,
                          "src": "4213:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4213:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a6465706f7369743a205472616e73666572206661696c6564",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4276:40:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebb67154a7028dae3cb153c5330d9b20b3dc94401b2e2828cee78911b6a94e10",
                          "typeString": "literal_string \"CompoundPool::deposit: Transfer failed\""
                        },
                        "value": "CompoundPool::deposit: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebb67154a7028dae3cb153c5330d9b20b3dc94401b2e2828cee78911b6a94e10",
                          "typeString": "literal_string \"CompoundPool::deposit: Transfer failed\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4205:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4205:112:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "4205:112:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "4349:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 455,
                      "name": "_approveDepositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "4328:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4328:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "4328:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 462,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "4395:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "4376:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 627,
                            "src": "4376:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4376:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4407:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4376:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a6465706f7369743a20436f6d706f756e64206d696e74206661696c6564",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4410:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4382c4f2dc310b68043ad98d7d0adbb2ba5fc2c494bdcc0c609bc658287af8",
                          "typeString": "literal_string \"CompoundPool::deposit: Compound mint failed\""
                        },
                        "value": "CompoundPool::deposit: Compound mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4382c4f2dc310b68043ad98d7d0adbb2ba5fc2c494bdcc0c609bc658287af8",
                          "typeString": "literal_string \"CompoundPool::deposit: Compound mint failed\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4368:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4368:88:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4368:88:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "4477:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4477:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 472,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "4489:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 469,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "4471:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:26:3"
                }
              ]
            },
            "documentation": "@notice Called by someone wishing to deposit to the bank. This amount, plus previous user's balance, will always be withdrawable\n@dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\n@param _amount The amount of deposit tokens to deposit",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "4171:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4170:17:3"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4195:0:3"
            },
            "scope": 618,
            "src": "4154:350:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "4787:262:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 482,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "4803:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4803:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "4815:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 481,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "4797:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4797:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "4797:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 490,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "4873:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 488,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "4842:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeemUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 634,
                            "src": "4842:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4842:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4885:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4842:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a77697468647261773a20436f6d706f756e642072656465656d206661696c6564",
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4888:48:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e6f79d44a45c00d842d048d6128d94df6977c21cce9462fafc269fb29b8632a",
                          "typeString": "literal_string \"CompoundPool::withdraw: Compound redeem failed\""
                        },
                        "value": "CompoundPool::withdraw: Compound redeem failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e6f79d44a45c00d842d048d6128d94df6977c21cce9462fafc269fb29b8632a",
                          "typeString": "literal_string \"CompoundPool::withdraw: Compound redeem failed\""
                        }
                      ],
                      "id": 487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4834:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 500,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "4978:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4978:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 502,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "4990:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 498,
                            "name": "depositToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "4956:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1472",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1426,
                          "src": "4956:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4956:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a77697468647261773a205472616e73666572206661696c6564",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5000:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e7717501ed7efcab4de3b7cab86d78dad22068cb6d2c0635c8990ae814ffa83",
                          "typeString": "literal_string \"CompoundPool::withdraw: Transfer failed\""
                        },
                        "value": "CompoundPool::withdraw: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e7717501ed7efcab4de3b7cab86d78dad22068cb6d2c0635c8990ae814ffa83",
                          "typeString": "literal_string \"CompoundPool::withdraw: Transfer failed\""
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4948:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4948:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "4948:94:3"
                }
              ]
            },
            "documentation": "@notice Called by someone wishing to withdraw from the bank\n@dev This will fail if msg.sender doesn't have at least _amount pool share tokens\n@param _amount The amount of deposit tokens to withdraw",
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "4763:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4763:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4762:17:3"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4787:0:3"
            },
            "scope": 618,
            "src": "4745:304:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "5438:266:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 516,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "5482:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5482:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 519,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1517,
                                "src": "5502:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              ],
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5494:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5494:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 521,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "5509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 514,
                            "name": "depositToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "5456:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1472",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1455,
                          "src": "5456:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5456:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a646f6e6174653a205472616e73666572206661696c6564",
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5519:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3fc551048ba896be4dc86c2acbd35a4531ab2053f258dffe88c2dc1fb696fd",
                          "typeString": "literal_string \"CompoundPool::donate: Transfer failed\""
                        },
                        "value": "CompoundPool::donate: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3fc551048ba896be4dc86c2acbd35a4531ab2053f258dffe88c2dc1fb696fd",
                          "typeString": "literal_string \"CompoundPool::donate: Transfer failed\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "5448:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5448:111:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "5448:111:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "5591:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 526,
                      "name": "_approveDepositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "5570:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5570:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "5570:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 533,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "5637:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 531,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "5618:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 627,
                            "src": "5618:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5618:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5649:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5618:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a646f6e6174653a20436f6d706f756e64206d696e74206661696c6564",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5652:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6e356d865a7dd34ccdef3deadcb9ecf635f7397984c105af40c0ef84530c30",
                          "typeString": "literal_string \"CompoundPool::donate: Compound mint failed\""
                        },
                        "value": "CompoundPool::donate: Compound mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6e356d865a7dd34ccdef3deadcb9ecf635f7397984c105af40c0ef84530c30",
                          "typeString": "literal_string \"CompoundPool::donate: Compound mint failed\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "5610:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5610:87:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "5610:87:3"
                }
              ]
            },
            "documentation": "@notice Called by someone wishing to donate to the bank. This amount will *not* be added to users balance, and will be usable by the beneficiary.\n@dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\n@param _amount The amount of deposit tokens to donate",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "5414:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5413:17:3"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5438:0:3"
            },
            "scope": 618,
            "src": "5398:306:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "6019:137:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 561,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "6135:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6135:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "PRECISION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "6120:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 553,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1517,
                                        "src": "6108:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CompoundPool_$618",
                                          "typeString": "contract CompoundPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CompoundPool_$618",
                                          "typeString": "contract CompoundPool"
                                        }
                                      ],
                                      "id": 552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6100:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 554,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6100:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 550,
                                    "name": "compoundToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 296,
                                    "src": "6076:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                      "typeString": "contract ICompoundERC20"
                                    }
                                  },
                                  "id": 551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 676,
                                  "src": "6076:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6076:38:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 546,
                                    "name": "compoundToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 296,
                                    "src": "6036:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                      "typeString": "contract ICompoundERC20"
                                    }
                                  },
                                  "id": 547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchangeRateCurrent",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 660,
                                  "src": "6036:33:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                    "typeString": "function () external returns (uint256)"
                                  }
                                },
                                "id": 548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6036:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 790,
                              "src": "6036:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6036:79:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 815,
                          "src": "6036:83:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6036:94:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6036:98:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6036:113:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 545,
                  "id": 564,
                  "nodeType": "Return",
                  "src": "6029:120:3"
                }
              ]
            },
            "documentation": "@notice Returns the amount of deposit tokens that are usable by the beneficiary. Basically, interestEarned+donations\n@dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "excessDepositTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5991:2:3"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "6010:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6010:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6009:9:3"
            },
            "scope": 618,
            "src": "5963:193:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "6226:117:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 583,
                        "name": "PRECISION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "6326:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 578,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1517,
                                    "src": "6314:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CompoundPool_$618",
                                      "typeString": "contract CompoundPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CompoundPool_$618",
                                      "typeString": "contract CompoundPool"
                                    }
                                  ],
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6306:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6306:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 575,
                                "name": "compoundToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "6282:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                  "typeString": "contract ICompoundERC20"
                                }
                              },
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 676,
                              "src": "6282:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6282:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "compoundToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "6243:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                  "typeString": "contract ICompoundERC20"
                                }
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exchangeRateStored",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 691,
                              "src": "6243:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6243:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 790,
                          "src": "6243:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6243:78:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 815,
                      "src": "6243:82:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6243:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 570,
                  "id": 585,
                  "nodeType": "Return",
                  "src": "6236:100:3"
                }
              ]
            },
            "documentation": null,
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokenStoredBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6196:2:3"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "6217:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6217:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6216:9:3"
            },
            "scope": 618,
            "src": "6162:181:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "6406:237:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 595,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "6450:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CompoundPool_$618",
                                "typeString": "contract CompoundPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CompoundPool_$618",
                                "typeString": "contract CompoundPool"
                              }
                            ],
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6442:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6442:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 598,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "6465:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            ],
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6457:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6457:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 592,
                          "name": "depositToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "6419:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1472",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1435,
                        "src": "6419:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6419:61:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "_minimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "6483:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6419:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 615,
                  "nodeType": "IfStatement",
                  "src": "6416:221:3",
                  "trueBody": {
                    "id": 614,
                    "nodeType": "Block",
                    "src": "6492:145:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 607,
                                  "name": "compoundToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 296,
                                  "src": "6535:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                    "typeString": "contract ICompoundERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                    "typeString": "contract ICompoundERC20"
                                  }
                                ],
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6527:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6527:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                                  "id": 610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6558:66:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                                  },
                                  "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                                  }
                                ],
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6550:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6550:75:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 603,
                              "name": "depositToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "6506:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "6506:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6506:120:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 613,
                        "nodeType": "ExpressionStatement",
                        "src": "6506:120:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approveDepositToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "name": "_minimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "6379:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6379:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6378:18:3"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6406:0:3"
            },
            "scope": 618,
            "src": "6349:294:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 619,
        "src": "848:5797:3"
      }
    ],
    "src": "0:6646:3"
  },
  "legacyAST": {
    "absolutePath": "compound-pooling/contracts/CompoundPool.sol",
    "exportedSymbols": {
      "CompoundPool": [
        618
      ]
    },
    "id": 619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 265,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "id": 266,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 268,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1473,
        "src": "58:80:3",
        "symbolAliases": [
          {
            "foreign": 267,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 270,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1404,
        "src": "139:94:3",
        "symbolAliases": [
          {
            "foreign": 269,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 272,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1346,
        "src": "234:78:3",
        "symbolAliases": [
          {
            "foreign": 271,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 274,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 838,
        "src": "313:77:3",
        "symbolAliases": [
          {
            "foreign": 273,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 276,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 949,
        "src": "391:80:3",
        "symbolAliases": [
          {
            "foreign": 275,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "compound-pooling/contracts/interface/ICompoundERC20.sol",
        "file": "./interface/ICompoundERC20.sol",
        "id": 278,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 693,
        "src": "473:64:3",
        "symbolAliases": [
          {
            "foreign": 277,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "compound-pooling/contracts/interface/IComptroller.sol",
        "file": "./interface/IComptroller.sol",
        "id": 280,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 705,
        "src": "538:60:3",
        "symbolAliases": [
          {
            "foreign": 279,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 281,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "873:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1345",
                "typeString": "contract ERC20"
              }
            },
            "id": 282,
            "nodeType": "InheritanceSpecifier",
            "src": "873:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 283,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1403,
              "src": "880:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1403",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 284,
            "nodeType": "InheritanceSpecifier",
            "src": "880:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 285,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 948,
              "src": "895:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$948",
                "typeString": "contract Ownable"
              }
            },
            "id": 286,
            "nodeType": "InheritanceSpecifier",
            "src": "895:7:3"
          }
        ],
        "contractDependencies": [
          948,
          1345,
          1403,
          1472
        ],
        "contractKind": "contract",
        "documentation": "@title CompoundPool\n@author Nate Welch <github.com/flyging>\n@notice Based on Zefram Lou's implementation https://github.com/ZeframLou/pooled-cdai\n@dev A bank that will pool compound tokens and allows the beneficiary to withdraw",
        "fullyImplemented": true,
        "id": 618,
        "linearizedBaseContracts": [
          618,
          948,
          1403,
          1345,
          1472
        ],
        "name": "CompoundPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 289,
            "libraryName": {
              "contractScope": null,
              "id": 287,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 837,
              "src": "915:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$837",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "909:24:3",
            "typeName": {
              "id": 288,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "928:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 294,
            "name": "PRECISION",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "939:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 290,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "939:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 293,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 291,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "977:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 292,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "983:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "977:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 296,
            "name": "compoundToken",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "992:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICompoundERC20_$692",
              "typeString": "contract ICompoundERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 295,
              "name": "ICompoundERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 692,
              "src": "992:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                "typeString": "contract ICompoundERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 298,
            "name": "depositToken",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "1033:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1472",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 297,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1472,
              "src": "1033:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1472",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 300,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "1065:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 299,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1065:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 302,
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "1096:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 301,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1096:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1884:434:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "compoundToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1894:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                        "typeString": "contract ICompoundERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 323,
                      "name": "_compoundToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "1910:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                        "typeString": "contract ICompoundERC20"
                      }
                    },
                    "src": "1894:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                      "typeString": "contract ICompoundERC20"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "depositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "1934:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1472",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "_depositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "1949:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1472",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1934:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1472",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 330,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "1972:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "1986:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1972:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2030:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 334,
                      "name": "_approveDepositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "2009:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:23:3"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "markets",
                      "nodeType": "VariableDeclaration",
                      "scope": 374,
                      "src": "2082:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2082:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 340,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2082:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2123:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2109:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2113:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 343,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2113:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2082:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "2135:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2143:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2135:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "compoundToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "2156:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                            "typeString": "contract ICompoundERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                            "typeString": "contract ICompoundERC20"
                          }
                        ],
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2148:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2148:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2135:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:35:3"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "name": "errors",
                      "nodeType": "VariableDeclaration",
                      "scope": 374,
                      "src": "2180:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 357,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2180:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 358,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2180:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 364,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "2229:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 360,
                        "name": "_comptroller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "2203:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IComptroller_$704",
                          "typeString": "contract IComptroller"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "enterMarkets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "2203:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address[] memory) external returns (uint256[] memory)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2180:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "errors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "2255:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 368,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2262:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2255:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2268:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2255:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c656420746f20656e74657220636f6d706f756e6420746f6b656e206d61726b6574",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2271:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7325dc5fd16c87397620def10a5b5c104d561fa170816dabf0a252489d3f0c8",
                          "typeString": "literal_string \"Failed to enter compound token market\""
                        },
                        "value": "Failed to enter compound token market"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7325dc5fd16c87397620def10a5b5c104d561fa170816dabf0a252489d3f0c8",
                          "typeString": "literal_string \"Failed to enter compound token market\""
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "2247:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:64:3"
                }
              ]
            },
            "documentation": "@notice Constructor\n@param _name name of the pool share token\n@param _symbol symbol of the pool share token\n@param _comptroller the Compound Comptroller contract used to enter the compoundToken's market\n@param _compoundToken the Compound Token contract (e.g. cDAI)\n@param _depositToken the Deposit Token contract (e.g. DAI)\n@param _beneficiary the address that can withdraw excess deposit tokens (interest/donations)",
            "id": 375,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 317,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 304,
                    "src": "1845:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 318,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 306,
                    "src": "1852:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1861:2:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 320,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 316,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1403,
                  "src": "1831:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1403_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1831:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1632:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1661:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "name": "_comptroller",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1692:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IComptroller_$704",
                    "typeString": "contract IComptroller"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 307,
                    "name": "IComptroller",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 704,
                    "src": "1692:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IComptroller_$704",
                      "typeString": "contract IComptroller"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 310,
                  "name": "_compoundToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1727:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                    "typeString": "contract ICompoundERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 309,
                    "name": "ICompoundERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 692,
                    "src": "1727:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                      "typeString": "contract ICompoundERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 312,
                  "name": "_depositToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1766:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1472",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 311,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1472,
                    "src": "1766:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1472",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1796:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1622:200:3"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1884:0:3"
            },
            "scope": 618,
            "src": "1611:707:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "2443:125:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 378,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "2461:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2461:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 380,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "2475:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2461:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a6f6e6c7942656e65666963696172793a204f6e6c792063616c6c61626c652062792062656e6566696369617279",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2488:61:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30869cf775ddc3d53a1fc8ec80e01211dc0e4b6159c9720102eb880cf71d1c54",
                          "typeString": "literal_string \"CompoundPool::onlyBeneficiary: Only callable by beneficiary\""
                        },
                        "value": "CompoundPool::onlyBeneficiary: Only callable by beneficiary"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30869cf775ddc3d53a1fc8ec80e01211dc0e4b6159c9720102eb880cf71d1c54",
                          "typeString": "literal_string \"CompoundPool::onlyBeneficiary: Only callable by beneficiary\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "2453:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2453:97:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:97:3"
                },
                {
                  "id": 385,
                  "nodeType": "PlaceholderStatement",
                  "src": "2560:1:3"
                }
              ]
            },
            "documentation": "@dev used to restrict access of functions to the current beneficiary",
            "id": 387,
            "name": "onlyBeneficiary",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2440:2:3"
            },
            "src": "2416:152:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "2869:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2879:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 395,
                      "name": "_newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "2893:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2879:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:29:3"
                }
              ]
            },
            "documentation": "@notice Called by the `owner` to set a new beneficiary\n@dev This function will fail if called by a non-owner address\n@param _newBeneficiary The address that will become the new beneficiary",
            "id": 399,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 392,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 391,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 881,
                  "src": "2859:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2859:9:3"
              }
            ],
            "name": "updateBeneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "name": "_newBeneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "2827:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2826:25:3"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2869:0:3"
            },
            "scope": 618,
            "src": "2800:115:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "3391:430:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 413,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "3440:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 411,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "3409:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeemUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 634,
                            "src": "3409:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3409:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3452:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3409:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a20436f6d706f756e642072656465656d206661696c6564",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3455:56:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_341654225a8caeb36a7c5dd3c19711613ab4817b0583990ffe50a3b7e8644614",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Compound redeem failed\""
                        },
                        "value": "CompoundPool::withdrawInterest: Compound redeem failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_341654225a8caeb36a7c5dd3c19711613ab4817b0583990ffe50a3b7e8644614",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Compound redeem failed\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "3401:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3401:111:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "3401:111:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 421,
                            "name": "depositTokenStoredBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "3656:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3656:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 423,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "3687:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3687:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3656:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a7769746864726177496e7465726573743a204e6f7420656e6f75676820657863657373206465706f73697420746f6b656e",
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3702:65:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3b4adf3e1603acff87d3e9de5b6f4125814d00d397b3b0448d69e2aee54506d",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Not enough excess deposit token\""
                        },
                        "value": "CompoundPool::withdrawInterest: Not enough excess deposit token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3b4adf3e1603acff87d3e9de5b6f4125814d00d397b3b0448d69e2aee54506d",
                          "typeString": "literal_string \"CompoundPool::withdrawInterest: Not enough excess deposit token\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "3648:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:120:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:120:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 432,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3801:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 433,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "3806:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "depositToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "3779:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1472",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1426,
                      "src": "3779:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3779:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3779:35:3"
                }
              ]
            },
            "documentation": "@notice The beneficiary calls this function to withdraw excess deposit tokens\n@dev This function will fail if called by a non-beneficiary or if _amount is higher than the excess deposit tokens\n@param _to The address that the deposit tokens will be sent to\n@param _amount The amount of deposit tokens to send to the `_to` address",
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 406,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 405,
                  "name": "onlyBeneficiary",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 387,
                  "src": "3357:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3357:15:3"
              }
            ],
            "name": "withdrawInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "3320:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "3333:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3319:30:3"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "3382:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3381:9:3"
            },
            "scope": 618,
            "src": "3294:527:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "4195:309:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 445,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "4239:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4239:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 448,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1517,
                                "src": "4259:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              ],
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4251:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4251:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 450,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "4266:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 443,
                            "name": "depositToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "4213:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1472",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1455,
                          "src": "4213:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4213:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a6465706f7369743a205472616e73666572206661696c6564",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4276:40:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebb67154a7028dae3cb153c5330d9b20b3dc94401b2e2828cee78911b6a94e10",
                          "typeString": "literal_string \"CompoundPool::deposit: Transfer failed\""
                        },
                        "value": "CompoundPool::deposit: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebb67154a7028dae3cb153c5330d9b20b3dc94401b2e2828cee78911b6a94e10",
                          "typeString": "literal_string \"CompoundPool::deposit: Transfer failed\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4205:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4205:112:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "4205:112:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "4349:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 455,
                      "name": "_approveDepositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "4328:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4328:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "4328:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 462,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "4395:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "4376:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 627,
                            "src": "4376:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4376:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4407:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4376:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a6465706f7369743a20436f6d706f756e64206d696e74206661696c6564",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4410:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4382c4f2dc310b68043ad98d7d0adbb2ba5fc2c494bdcc0c609bc658287af8",
                          "typeString": "literal_string \"CompoundPool::deposit: Compound mint failed\""
                        },
                        "value": "CompoundPool::deposit: Compound mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4382c4f2dc310b68043ad98d7d0adbb2ba5fc2c494bdcc0c609bc658287af8",
                          "typeString": "literal_string \"CompoundPool::deposit: Compound mint failed\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4368:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4368:88:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4368:88:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "4477:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4477:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 472,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "4489:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 469,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "4471:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:26:3"
                }
              ]
            },
            "documentation": "@notice Called by someone wishing to deposit to the bank. This amount, plus previous user's balance, will always be withdrawable\n@dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\n@param _amount The amount of deposit tokens to deposit",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "4171:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4170:17:3"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4195:0:3"
            },
            "scope": 618,
            "src": "4154:350:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "4787:262:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 482,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "4803:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4803:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "4815:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 481,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "4797:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4797:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "4797:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 490,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "4873:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 488,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "4842:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeemUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 634,
                            "src": "4842:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4842:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4885:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4842:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a77697468647261773a20436f6d706f756e642072656465656d206661696c6564",
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4888:48:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e6f79d44a45c00d842d048d6128d94df6977c21cce9462fafc269fb29b8632a",
                          "typeString": "literal_string \"CompoundPool::withdraw: Compound redeem failed\""
                        },
                        "value": "CompoundPool::withdraw: Compound redeem failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e6f79d44a45c00d842d048d6128d94df6977c21cce9462fafc269fb29b8632a",
                          "typeString": "literal_string \"CompoundPool::withdraw: Compound redeem failed\""
                        }
                      ],
                      "id": 487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4834:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 500,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "4978:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4978:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 502,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "4990:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 498,
                            "name": "depositToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "4956:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1472",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1426,
                          "src": "4956:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4956:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a77697468647261773a205472616e73666572206661696c6564",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5000:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e7717501ed7efcab4de3b7cab86d78dad22068cb6d2c0635c8990ae814ffa83",
                          "typeString": "literal_string \"CompoundPool::withdraw: Transfer failed\""
                        },
                        "value": "CompoundPool::withdraw: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e7717501ed7efcab4de3b7cab86d78dad22068cb6d2c0635c8990ae814ffa83",
                          "typeString": "literal_string \"CompoundPool::withdraw: Transfer failed\""
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "4948:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4948:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "4948:94:3"
                }
              ]
            },
            "documentation": "@notice Called by someone wishing to withdraw from the bank\n@dev This will fail if msg.sender doesn't have at least _amount pool share tokens\n@param _amount The amount of deposit tokens to withdraw",
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "4763:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4763:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4762:17:3"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4787:0:3"
            },
            "scope": 618,
            "src": "4745:304:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "5438:266:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 516,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "5482:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5482:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 519,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1517,
                                "src": "5502:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CompoundPool_$618",
                                  "typeString": "contract CompoundPool"
                                }
                              ],
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5494:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5494:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 521,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "5509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 514,
                            "name": "depositToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "5456:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1472",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1455,
                          "src": "5456:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5456:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a646f6e6174653a205472616e73666572206661696c6564",
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5519:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3fc551048ba896be4dc86c2acbd35a4531ab2053f258dffe88c2dc1fb696fd",
                          "typeString": "literal_string \"CompoundPool::donate: Transfer failed\""
                        },
                        "value": "CompoundPool::donate: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3fc551048ba896be4dc86c2acbd35a4531ab2053f258dffe88c2dc1fb696fd",
                          "typeString": "literal_string \"CompoundPool::donate: Transfer failed\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "5448:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5448:111:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "5448:111:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "5591:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 526,
                      "name": "_approveDepositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "5570:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5570:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "5570:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 533,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "5637:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 531,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "5618:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 627,
                            "src": "5618:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5618:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5649:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5618:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d706f756e64506f6f6c3a3a646f6e6174653a20436f6d706f756e64206d696e74206661696c6564",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5652:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6e356d865a7dd34ccdef3deadcb9ecf635f7397984c105af40c0ef84530c30",
                          "typeString": "literal_string \"CompoundPool::donate: Compound mint failed\""
                        },
                        "value": "CompoundPool::donate: Compound mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6e356d865a7dd34ccdef3deadcb9ecf635f7397984c105af40c0ef84530c30",
                          "typeString": "literal_string \"CompoundPool::donate: Compound mint failed\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1490,
                        1491
                      ],
                      "referencedDeclaration": 1491,
                      "src": "5610:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5610:87:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "5610:87:3"
                }
              ]
            },
            "documentation": "@notice Called by someone wishing to donate to the bank. This amount will *not* be added to users balance, and will be usable by the beneficiary.\n@dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token\n@param _amount The amount of deposit tokens to donate",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "5414:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5413:17:3"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5438:0:3"
            },
            "scope": 618,
            "src": "5398:306:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "6019:137:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 561,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "6135:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6135:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "PRECISION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "6120:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 553,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1517,
                                        "src": "6108:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CompoundPool_$618",
                                          "typeString": "contract CompoundPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CompoundPool_$618",
                                          "typeString": "contract CompoundPool"
                                        }
                                      ],
                                      "id": 552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6100:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 554,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6100:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 550,
                                    "name": "compoundToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 296,
                                    "src": "6076:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                      "typeString": "contract ICompoundERC20"
                                    }
                                  },
                                  "id": 551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 676,
                                  "src": "6076:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6076:38:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 546,
                                    "name": "compoundToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 296,
                                    "src": "6036:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                      "typeString": "contract ICompoundERC20"
                                    }
                                  },
                                  "id": 547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchangeRateCurrent",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 660,
                                  "src": "6036:33:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                    "typeString": "function () external returns (uint256)"
                                  }
                                },
                                "id": 548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6036:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 790,
                              "src": "6036:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6036:79:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 815,
                          "src": "6036:83:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6036:94:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "6036:98:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6036:113:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 545,
                  "id": 564,
                  "nodeType": "Return",
                  "src": "6029:120:3"
                }
              ]
            },
            "documentation": "@notice Returns the amount of deposit tokens that are usable by the beneficiary. Basically, interestEarned+donations\n@dev Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "excessDepositTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5991:2:3"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "6010:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6010:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6009:9:3"
            },
            "scope": 618,
            "src": "5963:193:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "6226:117:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 583,
                        "name": "PRECISION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "6326:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 578,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1517,
                                    "src": "6314:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CompoundPool_$618",
                                      "typeString": "contract CompoundPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CompoundPool_$618",
                                      "typeString": "contract CompoundPool"
                                    }
                                  ],
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6306:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6306:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 575,
                                "name": "compoundToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "6282:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                  "typeString": "contract ICompoundERC20"
                                }
                              },
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 676,
                              "src": "6282:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6282:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "compoundToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "6243:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                  "typeString": "contract ICompoundERC20"
                                }
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exchangeRateStored",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 691,
                              "src": "6243:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6243:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 790,
                          "src": "6243:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6243:78:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 815,
                      "src": "6243:82:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6243:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 570,
                  "id": 585,
                  "nodeType": "Return",
                  "src": "6236:100:3"
                }
              ]
            },
            "documentation": null,
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokenStoredBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6196:2:3"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "6217:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6217:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6216:9:3"
            },
            "scope": 618,
            "src": "6162:181:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "6406:237:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 595,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "6450:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CompoundPool_$618",
                                "typeString": "contract CompoundPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CompoundPool_$618",
                                "typeString": "contract CompoundPool"
                              }
                            ],
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6442:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6442:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 598,
                              "name": "compoundToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "6465:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                "typeString": "contract ICompoundERC20"
                              }
                            ],
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6457:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6457:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 592,
                          "name": "depositToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "6419:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1472",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1435,
                        "src": "6419:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6419:61:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "_minimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "6483:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6419:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 615,
                  "nodeType": "IfStatement",
                  "src": "6416:221:3",
                  "trueBody": {
                    "id": 614,
                    "nodeType": "Block",
                    "src": "6492:145:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 607,
                                  "name": "compoundToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 296,
                                  "src": "6535:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                    "typeString": "contract ICompoundERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ICompoundERC20_$692",
                                    "typeString": "contract ICompoundERC20"
                                  }
                                ],
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6527:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6527:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                                  "id": 610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6558:66:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                                  },
                                  "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                                  }
                                ],
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6550:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6550:75:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 603,
                              "name": "depositToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "6506:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "6506:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6506:120:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 613,
                        "nodeType": "ExpressionStatement",
                        "src": "6506:120:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approveDepositToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "name": "_minimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "6379:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6379:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6378:18:3"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6406:0:3"
            },
            "scope": 618,
            "src": "6349:294:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 619,
        "src": "848:5797:3"
      }
    ],
    "src": "0:6646:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x607D2Dd18C9782dd0c387b2Fe8A69bBcfe0e3Eb3",
      "transactionHash": "0xf136042c8b7293acb67e2b7878df812064721a5b89d762178114d481cfd40d58"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-08-03T22:44:11.401Z",
  "devdoc": {
    "author": "Nate Welch <github.com/flyging>",
    "details": "A bank that will pool compound tokens and allows the beneficiary to withdraw",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "constructor": {
        "params": {
          "_beneficiary": "the address that can withdraw excess deposit tokens (interest/donations)",
          "_compoundToken": "the Compound Token contract (e.g. cDAI)",
          "_comptroller": "the Compound Comptroller contract used to enter the compoundToken's market",
          "_depositToken": "the Deposit Token contract (e.g. DAI)",
          "_name": "name of the pool share token",
          "_symbol": "symbol of the pool share token"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256)": {
        "details": "Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token",
        "params": {
          "_amount": "The amount of deposit tokens to deposit"
        }
      },
      "donate(uint256)": {
        "details": "Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token",
        "params": {
          "_amount": "The amount of deposit tokens to donate"
        }
      },
      "excessDepositTokens()": {
        "details": "Allowance for CompoundPool to transferFrom the msg.sender's balance must be set on the deposit token"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBeneficiary(address)": {
        "details": "This function will fail if called by a non-owner address",
        "params": {
          "_newBeneficiary": "The address that will become the new beneficiary"
        }
      },
      "withdraw(uint256)": {
        "details": "This will fail if msg.sender doesn't have at least _amount pool share tokens",
        "params": {
          "_amount": "The amount of deposit tokens to withdraw"
        }
      },
      "withdrawInterest(address,uint256)": {
        "details": "This function will fail if called by a non-beneficiary or if _amount is higher than the excess deposit tokens",
        "params": {
          "_amount": "The amount of deposit tokens to send to the `_to` address",
          "_to": "The address that the deposit tokens will be sent to"
        }
      }
    },
    "title": "CompoundPool"
  },
  "userdoc": {
    "methods": {
      "constructor": "Constructor",
      "deposit(uint256)": {
        "notice": "Called by someone wishing to deposit to the bank. This amount, plus previous user's balance, will always be withdrawable"
      },
      "donate(uint256)": {
        "notice": "Called by someone wishing to donate to the bank. This amount will *not* be added to users balance, and will be usable by the beneficiary."
      },
      "excessDepositTokens()": {
        "notice": "Returns the amount of deposit tokens that are usable by the beneficiary. Basically, interestEarned+donations"
      },
      "updateBeneficiary(address)": {
        "notice": "Called by the `owner` to set a new beneficiary"
      },
      "withdraw(uint256)": {
        "notice": "Called by someone wishing to withdraw from the bank"
      },
      "withdrawInterest(address,uint256)": {
        "notice": "The beneficiary calls this function to withdraw excess deposit tokens"
      }
    },
    "notice": "Based on Zefram Lou's implementation https://github.com/ZeframLou/pooled-cdai"
  }
}