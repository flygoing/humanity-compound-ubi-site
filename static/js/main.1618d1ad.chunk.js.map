{"version":3,"sources":["images/humanityIcon.svg","images/daiIcon.svg","utils/getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","wrap","_context","prev","next","ethereum","Web3","transactionConfirmationBlocks","transactionPollingTimeout","enable","t0","console","log","stop","App","state","allowance","BigNumber","usersPoolBalance","usersDaiBalance","inputValue","claimableUbiBalance","accounts","ubi","componentDidMount","networkId","pool","registry","dai","cDai","sent","version","eth","net","getId","Contract","UniversalBasicIncome","abi","networks","address","CompoundPool","IHumanityRegistry","DAI","CDAI","_this","setState","repeatedUpdate","alert","error","_callee2","_context2","updateBalances","kill","setTimeout","_callee3","_this$state","totalPoolBalance","excessPoolBalance","poolDepositBalance","isHuman","_context3","getAccounts","Number","methods","claimableBalance","call","t1","toString","t2","parseFloat","t3","Math","pow","toFixed","t4","balanceOf","t5","t6","t7","t8","balanceOfUnderlying","options","t9","t10","t11","t12","excessDepositTokens","t13","t14","t15","t16","totalSupply","t17","t18","t19","t20","t21","updateValue","_callee4","e","value","_context4","target","multipliedBy","updateValueToWalletBalance","_callee5","_context5","updateValueToPoolBalance","_callee6","_context6","getGasPrice","_callee7","recommended","_context7","abrupt","claim","_callee8","_this$state2","account","_context8","isClaiming","from","gasPrice","send","withdraw","_callee9","_this$state3","_context9","isWithdrawing","deposit","_callee10","_this$state4","promises","_context10","isDepositing","lt","approve","push","all","donate","_callee11","_this$state5","_context11","isDonating","this","react_default","createElement","className","style","borderBottom","src","humanityIcon","alt","width","height","id","href","border","padding","color","fontSize","marginTop","marginBottom","daiIcon","substring","onClick","disabled","paddingBottom","margin","parseInt","htmlFor","step","div","type","onChange","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1618d1ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/humanityIcon.d37c0cc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/daiIcon.cfb65a48.svg\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum, null, {transactionConfirmationBlocks: 1, transactionPollingTimeout:1200});\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // // Fallback to localhost; use dev console port by default...\n      // else {\n      //   const provider = new Web3.providers.HttpProvider(\n      //     \"http://127.0.0.1:8545\"\n      //   );\n      //   const web3 = new Web3(provider);\n      //   console.log(\"No web3 instance injected, using Local web3.\");\n      //   resolve(web3);\n      // }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport UniversalBasicIncome from './contracts/UniversalBasicIncome.json';\nimport CompoundPool from './contracts/CompoundPool.json';\nimport IHumanityRegistry from './contracts/IHumanityRegistry.json';\nimport DAI from './contracts/DAI.json';\nimport CDAI from './contracts/CDAI.json';\nimport getWeb3 from './utils/getWeb3';\n\nimport humanityIcon from './images/humanityIcon.svg'\nimport daiIcon from './images/daiIcon.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nclass App extends Component {\n  state = { allowance: BigNumber(0), usersPoolBalance: BigNumber(0), usersDaiBalance: BigNumber(0), inputValue: BigNumber(0), claimableUbiBalance: 0, web3: null, accounts: null, ubi: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      console.log(web3.transactionConfirmationBlocks, web3.transactionPollingTimeout,web3.version)\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const ubi = new web3.eth.Contract(\n        UniversalBasicIncome.abi,\n        UniversalBasicIncome.networks[networkId] && UniversalBasicIncome.networks[networkId].address,\n      );\n      const pool = new web3.eth.Contract(\n        CompoundPool.abi,\n        CompoundPool.networks[networkId] && CompoundPool.networks[networkId].address\n      )\n      const registry = new web3.eth.Contract(\n        IHumanityRegistry.abi,\n        IHumanityRegistry.networks[networkId] && IHumanityRegistry.networks[networkId].address\n      )\n      \n      const dai = new web3.eth.Contract(\n        DAI.abi,\n        DAI.networks[networkId] && DAI.networks[networkId].address\n      )\n      \n      const cDai = new web3.eth.Contract(\n        CDAI.abi,\n        CDAI.networks[networkId] && CDAI.networks[networkId].address\n\n      )\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, ubi, pool, registry, dai, cDai}, this.repeatedUpdate);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n  componentWillUnmount() {\n    this.kill = true;\n  }\n  \n\n  repeatedUpdate = async () => {\n    this.updateBalances()\n    if(!this.kill){\n      setTimeout(this.repeatedUpdate, 1000)\n    }\n  }\n\n  updateBalances = async () => {\n    const { web3, ubi, pool, registry, dai, cDai} = this.state;\n    // Use web3 to get the user's accounts.\n    const accounts = await web3.eth.getAccounts();\n\n    // Get the value from the contract to prove it worked.\n    const claimableUbiBalance = (Number.parseFloat((await ubi.methods.claimableBalance(accounts[0]).call()).toString()) / 10 ** 18).toFixed(6)\n\n    const usersPoolBalance = BigNumber((await pool.methods.balanceOf(accounts[0]).call()).toString())\n\n    const usersDaiBalance = BigNumber((await dai.methods.balanceOf(accounts[0]).call()).toString())\n\n    const totalPoolBalance = (BigNumber((await cDai.methods.balanceOfUnderlying(pool.options.address).call()).toString()) / 10 ** 18).toFixed(6)\n    const excessPoolBalance = (BigNumber((await pool.methods.excessDepositTokens().call()).toString()) / 10 ** 18).toFixed(6)\n    const poolDepositBalance = (BigNumber((await pool.methods.totalSupply().call()).toString()) / 10 ** 18).toFixed(6)\n    const isHuman = await registry.methods.isHuman(accounts[0]).call()\n\n    const allowance = BigNumber((await dai.methods.allowance(accounts[0], pool.options.address).call()).toString())\n    // Update state with the result.\n    this.setState({ allowance, claimableUbiBalance, usersPoolBalance, usersDaiBalance, totalPoolBalance, excessPoolBalance, poolDepositBalance, isHuman});\n  };\n\n  updateValue = async (e) => {\n    const value = BigNumber(e.target.value)\n    this.setState({inputValue: value.toString() === \"NaN\"? BigNumber(0) : value.multipliedBy(BigNumber(10).pow(BigNumber(18)))})\n  }\n\n  updateValueToWalletBalance = async (e) => {\n    this.setState({inputValue: this.state.usersDaiBalance})\n  }\n\n  updateValueToPoolBalance = async (e) => {\n    this.setState({inputValue: this.state.usersPoolBalance})\n  }\n  getGasPrice = async () => {\n    const {web3} = this.state\n    const recommended = await web3.eth.getGasPrice()\n    return BigNumber(recommended).multipliedBy(BigNumber(\"1.5\")).toString()\n  }\n\n  claim = async () => {\n    const {web3, ubi} = this.state\n    await this.setState({isClaiming: true})\n    // await this.updateBalances()\n    const account = (await web3.eth.getAccounts())[0]\n    try{\n      console.log(\"Starting transaction promises\")\n      await ubi.methods.claim().send({from: account, gasPrice: await this.getGasPrice()})\n    } catch (e){console.log(\"CLAIM ERROR\"); console.log(e)}\n    console.log(\"FINISHED CLAIM TRANSACTIONS\")\n    await this.setState({isClaiming: false})\n    await this.updateBalances()\n  }\n\n  withdraw = async () => {\n    const {web3, pool, inputValue} = this.state\n    await this.setState({isWithdrawing: true})\n    // await this.updateBalances()\n    const account = (await web3.eth.getAccounts())[0]\n    try {\n      console.log(\"Starting transaction promises\")\n      await pool.methods.withdraw(inputValue.toString()).send({from: account, gasPrice: await this.getGasPrice()})\n    } catch (e){console.log(\"WITHDRAW ERROR\"); console.log(e)}\n    console.log(\"FINISHED WITHDRAW TRANSACTIONS\")\n    await this.updateBalances()\n    await this.setState({isWithdrawing: false})\n  }\n\n  deposit = async () => {\n    const {web3, pool, dai, inputValue, allowance} = this.state\n    await this.setState({isDepositing: true})\n    // await this.updateBalances()\n    const account = (await web3.eth.getAccounts())[0]\n    try {\n      let promises = []\n      if(allowance.lt(inputValue)){\n        promises.push(dai.methods.approve(pool.options.address, BigNumber(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\").toFixed()).send({from: account, gasPrice: await this.getGasPrice()}))\n      }\n      promises.push(pool.methods.deposit(inputValue.toString()).send({from: account, gasPrice: await this.getGasPrice()}))\n      console.log(\"Starting transaction promises\")\n      await Promise.all(promises)\n    } catch (e){console.log(\"DEPOSIT ERROR\"); console.log(e)}\n    console.log(\"FINISHED DEPOSIT TRANSACTIONS\")\n    await this.updateBalances()\n    await this.setState({isDepositing: false})\n  }\n\n  donate = async () => {\n    const {web3, pool, dai, allowance, inputValue} = this.state\n    await this.setState({isDonating: true})\n    // await this.updateBalances()\n    const account = (await web3.eth.getAccounts())[0]\n    try {\n      let promises = []\n      if(allowance.lt(inputValue)){\n        promises.push(dai.methods.approve(pool.options.address, BigNumber(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\").toFixed()).send({from: account, gasPrice: await this.getGasPrice()}))\n      }\n      promises.push(pool.methods.donate(inputValue.toString()).send({from: account, gasPrice: await this.getGasPrice()}))\n      console.log(\"Starting transaction promises\")\n      await Promise.all(promises)\n    } catch (e){console.log(\"DONATE ERROR\"); console.log(e)}\n    console.log(\"FINISHED WITHDRAW TRANSACTIONS\")\n    await this.updateBalances()\n    await this.setState({isDonating: false})\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>\n    }\n    return (\n      <div className='App h-100'>\n        <div className = 'container-fluid container-large d-flex h-100 flex-column'>\n          <div className='row' style={{ 'borderBottom': '1px solid rgb(235, 239, 245)'}}>\n            <div className='col-6 p-3 d-flex justify-content-start'>\n              <img src={humanityIcon} alt='' style={{ width: '25px', height: '25px'}}/>\n              <p id='humanity-title'>Compound Interest Funded UBI</p>\n            </div>\n            <div className='col-6 p-3 d-flex justify-content-end'>\n            <a id='learn-apply' href='http://humanitydao.org/'>\n              Built for HumanityDAO | Learn & Apply\n            </a>\n\n            </div>\n          </div>\n          <div className='row flex-fill d-flex '>\n            <div className='col-12 my-auto'>\n              <div className='row'>\n                <div className='col-4' style={{ 'border': '1px solid rgb(235, 239, 245)', 'padding': '10px'}}>\n                    <p style={{color: 'rgb(112, 112, 112)'}}>Available to claim</p>\n                    <p style={{'fontSize': '70px', 'marginTop': '50px', 'marginBottom': '50px'}}>\n                      <img src={daiIcon} alt='' style={{ width: '80px', height: '70px'}}/>\n                      {this.state.claimableUbiBalance.toString().substring(0,8)}\n                    </p>\n                    <button style={{fontSize: '25px'}} onClick={this.claim} className=\"sc-htpNat lnMvqK\" disabled={!this.state.isHuman || this.state.isClaiming}>\n                      {this.state.isHuman ? this.state.isClaiming?\"CLAIMING\":\"CLAIM\" : \"NOT HUMAN\"}\n                    </button>\n                </div>\n                <div className='col-4' style={{ 'border': '1px solid rgb(235, 239, 245)', 'padding': '10px'}}>\n                  <div className='row' style={{color: 'rgb(112, 112, 112)', marginBottom: '0px', paddingBottom: '0px'}}>\n                    <div className=\"col\" style={{ marginBottom: '0px', paddingBottom: '0px'}}>\n                      <p style={{ 'margin': '0px', paddingBottom: '0px'}}>Overall pool info</p>\n                    </div>\n                  </div>\n                  <div className='row' style={{padding:'20px'}}>\n                    <div className='col-12' >\n                      <div className='row' style={{'fontSize': '30px'}}>\n                        <div className='col-6'>\n                          <div className='row'>\n                            <img src={daiIcon} alt='' style={{ width: '25px', height: '25px', marginTop: '10px'}}/> <p>Claimable</p>\n                          </div>\n                          <div className='row' style={{marginTop:'40px'}}>\n                            <img src={daiIcon} alt='' style={{ width: '25px', height: '25px', marginTop: '10px'}}/> <p>Deposits</p> \n                          </div>\n                          <div className='row' style={{marginTop:'40px'}}>\n                            <img src={daiIcon} alt='' style={{ width: '25px', height: '25px', marginTop: '10px'}}/> <p>Total</p> \n                          </div>\n                        </div>\n                        <div className='col-6'>\n                          <div className='row justify-content-end'>\n                            <p>{this.state.excessPoolBalance}</p>\n                          </div>\n                          <div className='row justify-content-end' style={{marginTop:'40px'}}>\n                            <p>{this.state.poolDepositBalance}</p> \n                          </div>\n                          <div className='row justify-content-end' style={{marginTop:'40px'}}>\n                            <p>{this.state.totalPoolBalance}</p> \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='col-4' style={{ 'border': '1px solid rgb(235, 239, 245)', 'padding': '10px'}}>\n                      <div className='row' style={{color: 'rgb(112, 112, 112)', marginBottom: '0px', paddingBottom: '0px'}}>\n                        <div className='col' style={{ marginBottom: '0px', paddingBottom: '0px'}}>\n                          <p style={{ 'margin': '0px', paddingBottom: '0px'}}>Your contributions</p>\n                        </div>\n                      </div>\n                      <div className='row' style={{marginTop:'15px'}}>\n                        <div className='col-6 set-max' onClick={this.updateValueToWalletBalance}>\n                          Wallet balance<br/>\n                          <img src={daiIcon} alt='' style={{ width: '20px', height: '20px'}}/>\n{(parseInt(this.state.usersDaiBalance) / 10 ** 18).toFixed(6)}\n                        </div>\n                        <div className='col-6 set-max' onClick={this.updateValueToPoolBalance}>\n                          Pool balance<br/>\n                          <img src={daiIcon} alt='' style={{ width: '20px', height: '20px'}}/>\n{(parseInt(this.state.usersPoolBalance) / 10 ** 18).toFixed(6)}\n                        </div>\n                      </div>\n                      <div className='row'>\n\n                        <div className='col-12'>\n                            <div className='row' style={{marginTop: '25px'}}>\n                              <div className='col-12'>\n                                <div className=\"form-group\">\n                                  <label htmlFor=\"amount\">Amount</label>\n                                  <input step=\"any\" value={this.state.inputValue.div(BigNumber(10).pow(18)).toFixed()} type=\"number\" className=\"form-control\" id=\"amount\"  onChange={this.updateValue}/>\n                                </div>\n                              </div>\n\n                            </div>\n                            <div className='row' style={{marginTop: '25px'}}>\n                              <div className='col-4'>\n                                <button style={{width: '100%', fontSize: '15px', padding: '2px'}} onClick={this.withdraw} className=\"sc-htpNat lnMvqK\" disabled={this.state.isWithdrawing || this.state.isDepositing || this.state.isDonating || this.state.inputValue.toString() === \"0\" || this.state.usersPoolBalance.lt(this.state.inputValue)}>\n                                  {this.state.isWithdrawing?\"WITHDRAWING\":\"WITHDRAW\" }\n                                </button>\n\n                              </div>\n                              <div className='col-4'>\n                                <button style={{width: '100%', fontSize: '15px', padding: '2px'}} onClick={this.deposit} className=\"sc-htpNat lnMvqK\" disabled={this.state.isWithdrawing || this.state.isDepositing || this.state.isDonating || this.state.inputValue.toString() === \"0\" || this.state.usersDaiBalance.lt(this.state.inputValue)}>\n                                  {this.state.isDepositing?\"DEPOSITING\":\"DEPOSIT\"}\n                                </button>\n\n                              </div>\n                              <div className='col-4'>\n                                <button style={{width: '100%', fontSize: '15px', padding: '2px'}} onClick={this.donate} className=\"sc-htpNat lnMvqK\" disabled={this.state.isWithdrawing || this.state.isDepositing || this.state.isDonating || this.state.inputValue.toString() === \"0\" || this.state.usersDaiBalance.lt(this.state.inputValue)}>\n                                  {this.state.isDonating?\"DONATING\":\"DONATE\"}\n                                </button>\n\n                              </div>\n                            </div>\n                        </div>\n                      </div>\n                      <div className='row'>\n                      </div>\n                    </div>\n              </div>\n            </div>\n          </div>\n          <div className='row flex-fill d-flex justify-content-start '>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}